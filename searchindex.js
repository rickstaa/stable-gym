Search.setIndex({"docnames": ["autoapi/index", "autoapi/stable_gym/common/index", "autoapi/stable_gym/common/max_episode_steps_injection_wrapper/index", "autoapi/stable_gym/common/utils/index", "autoapi/stable_gym/envs/biological/index", "autoapi/stable_gym/envs/biological/oscillator/index", "autoapi/stable_gym/envs/biological/oscillator/oscillator/index", "autoapi/stable_gym/envs/biological/oscillator_complicated/index", "autoapi/stable_gym/envs/biological/oscillator_complicated/oscillator_complicated/index", "autoapi/stable_gym/envs/classic_control/cartpole_cost/cartpole_cost/index", "autoapi/stable_gym/envs/classic_control/cartpole_cost/index", "autoapi/stable_gym/envs/classic_control/cartpole_tracking_cost/cartpole_tracking_cost/index", "autoapi/stable_gym/envs/classic_control/cartpole_tracking_cost/index", "autoapi/stable_gym/envs/classic_control/ex3_ekf/ex3_ekf/index", "autoapi/stable_gym/envs/classic_control/ex3_ekf/index", "autoapi/stable_gym/envs/classic_control/index", "autoapi/stable_gym/envs/index", "autoapi/stable_gym/envs/mujoco/ant_cost/ant_cost/index", "autoapi/stable_gym/envs/mujoco/ant_cost/index", "autoapi/stable_gym/envs/mujoco/half_cheetah_cost/half_cheetah_cost/index", "autoapi/stable_gym/envs/mujoco/half_cheetah_cost/index", "autoapi/stable_gym/envs/mujoco/hopper_cost/hopper_cost/index", "autoapi/stable_gym/envs/mujoco/hopper_cost/index", "autoapi/stable_gym/envs/mujoco/humanoid_cost/humanoid_cost/index", "autoapi/stable_gym/envs/mujoco/humanoid_cost/index", "autoapi/stable_gym/envs/mujoco/index", "autoapi/stable_gym/envs/mujoco/swimmer_cost/index", "autoapi/stable_gym/envs/mujoco/swimmer_cost/swimmer_cost/index", "autoapi/stable_gym/envs/mujoco/walker2d_cost/index", "autoapi/stable_gym/envs/mujoco/walker2d_cost/walker2d_cost/index", "autoapi/stable_gym/envs/robotics/fetch/fetch_reach_cost/fetch_reach_cost/index", "autoapi/stable_gym/envs/robotics/fetch/fetch_reach_cost/index", "autoapi/stable_gym/envs/robotics/fetch/index", "autoapi/stable_gym/envs/robotics/index", "autoapi/stable_gym/envs/robotics/minitaur/index", "autoapi/stable_gym/envs/robotics/minitaur/minitaur_bullet_cost/index", "autoapi/stable_gym/envs/robotics/minitaur/minitaur_bullet_cost/minitaur_bullet_cost/index", "autoapi/stable_gym/envs/robotics/quadrotor/index", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_hover_cost/index", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_hover_cost/quadx_hover_cost/index", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_tracking_cost/index", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_tracking_cost/quadx_tracking_cost/index", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_waypoints_cost/index", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_waypoints_cost/quadx_waypoints_cost/index", "autoapi/stable_gym/index", "autoapi/stable_gym/version/index", "dev/add_new_envs", "dev/contributing", "dev/doc_dev", "dev/license", "envs/biological/oscillator", "envs/biological/oscillator_complicated", "envs/classic_control/cartpole_cost", "envs/classic_control/cartpole_tracking_cost", "envs/classic_control/ex3_ekf", "envs/envs", "envs/mujoco/ant_cost", "envs/mujoco/half_cheetah_cost", "envs/mujoco/hopper_cost", "envs/mujoco/humanoid_cost", "envs/mujoco/swimmer_cost", "envs/mujoco/walker2d_cost", "envs/robotics/fetch_reach_cost", "envs/robotics/minitaur_bullet_cost", "envs/robotics/quadx_hover_cost", "envs/robotics/quadx_tracking_cost", "envs/robotics/quadx_waypoints_cost", "get_started/install", "get_started/usage", "index"], "filenames": ["autoapi/index.rst", "autoapi/stable_gym/common/index.rst", "autoapi/stable_gym/common/max_episode_steps_injection_wrapper/index.rst", "autoapi/stable_gym/common/utils/index.rst", "autoapi/stable_gym/envs/biological/index.rst", "autoapi/stable_gym/envs/biological/oscillator/index.rst", "autoapi/stable_gym/envs/biological/oscillator/oscillator/index.rst", "autoapi/stable_gym/envs/biological/oscillator_complicated/index.rst", "autoapi/stable_gym/envs/biological/oscillator_complicated/oscillator_complicated/index.rst", "autoapi/stable_gym/envs/classic_control/cartpole_cost/cartpole_cost/index.rst", "autoapi/stable_gym/envs/classic_control/cartpole_cost/index.rst", "autoapi/stable_gym/envs/classic_control/cartpole_tracking_cost/cartpole_tracking_cost/index.rst", "autoapi/stable_gym/envs/classic_control/cartpole_tracking_cost/index.rst", "autoapi/stable_gym/envs/classic_control/ex3_ekf/ex3_ekf/index.rst", "autoapi/stable_gym/envs/classic_control/ex3_ekf/index.rst", "autoapi/stable_gym/envs/classic_control/index.rst", "autoapi/stable_gym/envs/index.rst", "autoapi/stable_gym/envs/mujoco/ant_cost/ant_cost/index.rst", "autoapi/stable_gym/envs/mujoco/ant_cost/index.rst", "autoapi/stable_gym/envs/mujoco/half_cheetah_cost/half_cheetah_cost/index.rst", "autoapi/stable_gym/envs/mujoco/half_cheetah_cost/index.rst", "autoapi/stable_gym/envs/mujoco/hopper_cost/hopper_cost/index.rst", "autoapi/stable_gym/envs/mujoco/hopper_cost/index.rst", "autoapi/stable_gym/envs/mujoco/humanoid_cost/humanoid_cost/index.rst", "autoapi/stable_gym/envs/mujoco/humanoid_cost/index.rst", "autoapi/stable_gym/envs/mujoco/index.rst", "autoapi/stable_gym/envs/mujoco/swimmer_cost/index.rst", "autoapi/stable_gym/envs/mujoco/swimmer_cost/swimmer_cost/index.rst", "autoapi/stable_gym/envs/mujoco/walker2d_cost/index.rst", "autoapi/stable_gym/envs/mujoco/walker2d_cost/walker2d_cost/index.rst", "autoapi/stable_gym/envs/robotics/fetch/fetch_reach_cost/fetch_reach_cost/index.rst", "autoapi/stable_gym/envs/robotics/fetch/fetch_reach_cost/index.rst", "autoapi/stable_gym/envs/robotics/fetch/index.rst", "autoapi/stable_gym/envs/robotics/index.rst", "autoapi/stable_gym/envs/robotics/minitaur/index.rst", "autoapi/stable_gym/envs/robotics/minitaur/minitaur_bullet_cost/index.rst", "autoapi/stable_gym/envs/robotics/minitaur/minitaur_bullet_cost/minitaur_bullet_cost/index.rst", "autoapi/stable_gym/envs/robotics/quadrotor/index.rst", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_hover_cost/index.rst", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_hover_cost/quadx_hover_cost/index.rst", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_tracking_cost/index.rst", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_tracking_cost/quadx_tracking_cost/index.rst", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_waypoints_cost/index.rst", "autoapi/stable_gym/envs/robotics/quadrotor/quadx_waypoints_cost/quadx_waypoints_cost/index.rst", "autoapi/stable_gym/index.rst", "autoapi/stable_gym/version/index.rst", "dev/add_new_envs.rst", "dev/contributing.rst", "dev/doc_dev.rst", "dev/license.rst", "envs/biological/oscillator.rst", "envs/biological/oscillator_complicated.rst", "envs/classic_control/cartpole_cost.rst", "envs/classic_control/cartpole_tracking_cost.rst", "envs/classic_control/ex3_ekf.rst", "envs/envs.rst", "envs/mujoco/ant_cost.rst", "envs/mujoco/half_cheetah_cost.rst", "envs/mujoco/hopper_cost.rst", "envs/mujoco/humanoid_cost.rst", "envs/mujoco/swimmer_cost.rst", "envs/mujoco/walker2d_cost.rst", "envs/robotics/fetch_reach_cost.rst", "envs/robotics/minitaur_bullet_cost.rst", "envs/robotics/quadx_hover_cost.rst", "envs/robotics/quadx_tracking_cost.rst", "envs/robotics/quadx_waypoints_cost.rst", "get_started/install.rst", "get_started/usage.rst", "index.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.common.max_episode_steps_injection_wrapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.biological</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.biological.oscillator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.biological.oscillator.oscillator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.biological.oscillator_complicated</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.biological.oscillator_complicated.oscillator_complicated</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.classic_control.cartpole_cost.cartpole_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.classic_control.cartpole_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.classic_control.cartpole_tracking_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.classic_control.ex3_ekf.ex3_ekf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.classic_control.ex3_ekf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.classic_control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.ant_cost.ant_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.ant_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.half_cheetah_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.hopper_cost.hopper_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.hopper_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.humanoid_cost.humanoid_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.humanoid_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.swimmer_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.swimmer_cost.swimmer_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.walker2d_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.mujoco.walker2d_cost.walker2d_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.fetch.fetch_reach_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.fetch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.minitaur</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.minitaur.minitaur_bullet_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.quadrotor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.quadrotor.quadx_hover_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.quadrotor.quadx_tracking_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stable_gym.version</span></code>", "Add new environments", "Contribute to stable-gym", "Build the documentation", "License", "Oscillator gymnasium environment", "Oscillator Complicated gymnasium environment", "CartPoleCost gymnasium environment", "CartPoleTrackingCost gymnasium environment", "Ex3EKF gymnasium environment", "Environments", "AntCost gymnasium environment", "HalfCheetahCost gymnasium environment", "HopperCost gymnasium environment", "HumanoidCost gymnasium environment", "SwimmerCost gymnasium environment", "Walker2dCost gymnasium environment", "FetchReachCost gymnasium environment", "MinitaurBulletCost gymnasium environment", "QuadXHoverCost gymnasium environment", "QuadXTrackingCost gymnasium environment", "QuadXWaypointsCost gymnasium environment", "Installation", "How to use", "Welcome to Stable Gym\u2019s documentation"], "terms": {"thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "page": [0, 48, 69], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69], "auto": 0, "gener": [0, 4, 5, 6, 7, 8, 48], "document": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 64, 65, 66], "1": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66, 67], "stable_gym": [0, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "common": [0, 44, 46], "max_episode_steps_injection_wrapp": [0, 1, 44, 46], "util": [0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "env": [0, 1, 2, 44, 67, 68, 69], "biolog": [0, 16, 44, 46, 69], "oscil": [0, 4, 7, 8, 16, 44, 46, 55, 68], "oscillator_compl": [0, 4, 16, 44, 46], "classic_control": [0, 16, 44, 46], "cartpole_cost": [0, 15, 16, 44, 46], "cartpole_tracking_cost": [0, 15, 16, 44, 46], "ex3_ekf": [0, 15, 16, 44, 46], "mujoco": [0, 16, 30, 31, 32, 33, 44, 46, 69], "ant_cost": [0, 16, 25, 44, 46], "half_cheetah_cost": [0, 16, 25, 44, 46], "hopper_cost": [0, 16, 25, 44, 46], "humanoid_cost": [0, 16, 25, 44, 46], "swimmer_cost": [0, 16, 25, 44, 46], "walker2d_cost": [0, 16, 25, 44, 46], "robot": [0, 16, 44, 46, 62, 69], "fetch": [0, 16, 33, 44, 46, 62], "fetch_reach_cost": [0, 16, 32, 33, 46], "minitaur": [0, 16, 33, 44, 46, 63], "minitaur_bullet_cost": [0, 16, 33, 34, 46], "quadrotor": [0, 16, 33, 44, 46, 64, 65, 66], "quadx_hover_cost": [0, 16, 33, 37, 46], "quadx_tracking_cost": [0, 16, 33, 37, 46], "quadx_waypoints_cost": [0, 16, 33, 37, 46], "version": [0, 3, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63], "creat": [0, 3, 46, 47, 48, 67, 68, 69], "sphinx": [0, 48], "autoapi": 0, "sever": [1, 4, 5, 6, 7, 8, 47, 48, 50, 51, 52, 53, 69], "function": [1, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68, 69], "can": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "us": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 67, 69], "across": [1, 4, 5, 6, 7, 8, 50, 51], "all": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63], "stabl": [1, 3, 4, 15, 16, 25, 32, 33, 34, 37, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "gym": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "gymnasium": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 55, 68, 69], "environ": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 67, 68, 69], "maxepisodestepsinjectionwrapp": [1, 2, 44, 46], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "base": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 54, 55, 63], "wrapper": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 66], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 68], "inject": [1, 2, 3, 44], "max_episode_step": [1, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 64, 65, 66], "attribut": [1, 2, 10, 12, 15], "timelimit": [1, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 66], "_time_limit_max_episode_step": [1, 2, 44], "If": [1, 2, 3, 9, 10, 15, 32, 33, 34, 35, 36, 44, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "wrap": [1, 2, 3, 44], "set": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63, 65, 66], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46], "param": [1, 2, 44], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53], "file": [2, 46, 49], "small": 2, "argument": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "potenti": [2, 9, 10, 11, 12, 15, 52, 53], "nest": [2, 3], "under": [2, 9, 10, 11, 12, 15], "get_time_limit_wrapper_max_episode_step": 2, "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 68], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 64, 65, 66], "valu": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "int": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "inject_attribute_into_base_env": 2, "attribute_nam": 2, "attribute_valu": 2, "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "name": 2, "object": [2, 3, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 53, 56, 57, 58, 59, 60, 61, 63, 65], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 61, 63, 65, 66, 67], "multipl": 3, "color": 3, "string": 3, "bold": 3, "fals": [3, 4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 46], "highlight": 3, "make": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 67, 68], "sure": [3, 47, 48], "also": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "work": [3, 33, 34, 35, 36, 47], "empti": 3, "you": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "want": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49], "text": [3, 14], "default": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53], "get_flattened_valu": 3, "input_obj": 3, "retriev": [3, 9, 10, 11, 12, 15], "present": [3, 4, 5, 6, 7, 8, 13, 14, 15, 50, 51, 54], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "append": 3, "them": [3, 33, 34, 35, 36, 46, 47], "list": [3, 33, 34, 35, 36, 37, 42, 43], "Its": 3, "like": [3, 9, 10, 11, 12, 15, 52, 53, 68], "recurs": 3, "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68], "input": [3, 4, 7, 8, 9, 10, 11, 12, 15, 47, 51], "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67], "which": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 33, 34, 35, 36, 47, 48, 50, 51, 52, 53, 63], "were": [3, 4, 5, 6, 7, 8, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 47, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "get_flattened_kei": 3, "include_root": 3, "kei": [3, 32, 33, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "includ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "root": 3, "level": 3, "abbrevi": 3, "input_item": 3, "length": [3, 9, 10, 11, 12, 15, 52, 53], "max_length": 3, "4": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 33, 37, 42, 43, 52, 53], "capit": 3, "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66], "uniqu": 3, "union": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "desir": [3, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 62, 63, 64, 65, 66], "maximum": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 64, 65, 66], "abbrevait": 3, "should": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "get_lowest_next_int": 3, "lowest": 3, "next": 3, "integ": 3, "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "determin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "interg": 3, "friendly_list": 3, "input_list": 3, "apostroph": 3, "transform": 3, "human": [3, 4, 5, 6, 7, 8, 13, 14, 15, 33, 37, 38, 39, 40, 41, 42, 43, 68], "friendli": [3, 4, 5, 6, 7, 8, 13, 14, 15, 50, 51], "format": [3, 47], "separ": [3, 9, 10, 15, 52], "comma": 3, "ampersand": 3, "item": [3, 46], "encapsul": 3, "strip_underscor": 3, "posit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 62, 64, 65, 66, 69], "strip": 3, "lead": 3, "trail": 3, "underscor": 3, "remov": [3, 33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "both": [3, 50, 51, 52, 53, 66], "without": [3, 49], "inject_valu": 3, "round_accuraci": 3, "2": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63], "order": 3, "axi": 3, "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 57, 64, 65, 66, 67], "yet": [3, 4, 5, 6, 7, 8, 13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "accuraci": 3, "check": [3, 33, 34, 35, 36, 47, 48], "when": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "along": [3, 52, 53], "onli": [3, 33, 37, 42, 43, 66], "numpi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "arrai": [3, 54], "verify_number_and_cast": 3, "x": [3, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "verifi": 3, "singl": [3, 32, 33], "number": [3, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "cast": 3, "maybe_parse_reset_bound": 3, "default_low": 3, "default_high": 3, "call": [3, 5, 50, 67], "dure": [3, 32, 33], "reset": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68], "custom": [3, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "sampl": [3, 68], "rang": [3, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 52, 53, 68], "initi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 69], "state": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "distribut": [3, 49], "pass": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47], "lower": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 52, 53], "limit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 50, 51, 52, 53, 54, 64, 65, 66], "specifi": 3, "upper": 3, "tupl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "low": 3, "np": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53], "ndarrai": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51], "dimens": 3, "high": 3, "obj": 3, "change_dict_kei": 3, "d": 3, "old_kei": 3, "new_kei": 3, "default_valu": 3, "chang": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "old": [3, 33, 37, 42, 43, 66], "new": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 53, 56, 58, 59, 61, 64, 65, 66, 69], "ani": [3, 49, 68, 69], "convert_gym_box_to_gymnasium_box": 3, "gym_box_spac": 3, "kwarg": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68], "convert": 3, "box": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 36], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 64], "addit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "keyword": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "change_precis": 3, "input_valu": 3, "precis": 3, "16": 3, "e": [3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "decim": 3, "system": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 54, 55], "render_mod": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68], "max_cost": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 50, 51, 52, 53], "100": [4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54], "reference_target_posit": [4, 5, 6, 7, 8, 11, 12, 15, 33, 37, 40, 41], "8": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 25, 28, 29, 33, 34, 35, 36, 52, 53, 56, 57, 61, 63], "reference_amplitud": [4, 5, 6, 7, 8, 11, 12, 15, 33, 37, 40, 41], "7": [4, 5, 6, 7, 8, 11, 12, 15, 21, 22, 25, 44, 45, 62, 67], "reference_frequ": [4, 5, 6, 7, 8, 11, 12, 15, 33, 37, 40, 41], "200": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 46, 52, 53], "reference_phase_shift": [4, 5, 6, 7, 8, 33, 37, 40, 41], "clip_act": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "exclude_reference_from_observ": [4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 65], "exclude_reference_error_from_observ": [4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 65], "action_space_dtyp": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "float64": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53], "observation_space_dtyp": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "synthet": [4, 5, 6, 7, 8, 13, 14, 15, 50, 51], "oscillatori": [4, 5, 6, 7, 8, 13, 14, 15, 50, 51], "network": [4, 5, 6, 7, 8, 13, 14, 15, 50, 51], "vector": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68], "manner": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "see": [4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 68, 69], "descript": [4, 5, 6, 7, 8, 13, 14, 15], "goal": [4, 5, 6, 7, 8, 13, 14, 15, 30, 31, 32, 33, 62], "agent": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 66, 69], "act": [4, 5, 6, 7, 8, 13, 14, 15, 50, 51, 54], "wai": [4, 5, 6, 7, 8, 13, 14, 15, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "one": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 50, 51, 65, 66, 68], "protein": [4, 5, 6, 7, 8, 50, 51], "follow": [4, 5, 6, 7, 8, 32, 33, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "suppli": [4, 5, 6, 7, 8, 50, 51], "refer": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "signal": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 65], "correspond": [4, 5, 6, 7, 8, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "paper": [4, 5, 6, 7, 8, 19, 20, 25, 35, 57], "han": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 50, 51, 52, 53, 57], "et": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 57, 63], "al": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 57, 63], "2020": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 50, 51, 52, 53, 57], "In": [4, 5, 6, 7, 8, 10, 12, 14, 18, 20, 22, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "our": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 34, 35, 36, 50, 51, 52, 53], "implement": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 25, 33, 34, 35, 36, 50, 51, 52, 53, 57, 64, 65, 66], "featur": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 47, 52, 53], "ad": [4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "more": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "flexibl": [4, 5, 6, 7, 8, 50, 51], "easier": [4, 5, 6, 7, 8], "now": [4, 5, 6, 7, 8, 11, 12, 15, 50, 51, 53], "allow": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 52, 53], "modif": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 50, 51, 52, 53], "individu": [4, 5, 6, 7, 8, 50, 51], "adjust": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 50, 51, 52, 53], "rather": [4, 5, 6, 7, 8], "than": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 63], "appli": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 64, 65, 66], "same": [4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "omit": [4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "observ": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 64, 68], "error": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "info": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "wa": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "expand": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 50, 51, 52, 53], "accur": [4, 5, 6, 7, 8, 9, 10, 15, 50, 51, 52], "reproduc": [4, 5, 6, 7, 8, 9, 10, 15, 47, 50, 51, 52], "plot": [4, 5, 6, 7, 8, 50, 51], "possibl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 47, 50, 51], "origin": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "code": [4, 5, 6, 7, 8, 19, 20, 25, 50, 51, 57], "an": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "threshold": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 34, 35, 36, 46, 51, 52, 53, 63], "episod": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66], "termin": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68], "match": [4, 5, 6, 7, 8, 33, 37, 42, 43], "depend": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 47, 48, 67], "num": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "min": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 37, 42, 43, 66], "max": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "lacl": [4, 5, 6, 7, 8, 50, 51], "mrna": [4, 5, 6, 7, 8, 50, 51], "transcript": [4, 5, 6, 7, 8, 50, 51], "concentr": [4, 5, 6, 7, 8, 50, 51], "infti": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 51], "tetr": [4, 5, 6, 7, 8, 50, 51], "ci": [4, 5, 6, 7, 8, 50, 51], "3": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 25, 28, 29, 33, 37, 38, 39, 40, 41, 42, 43, 58, 66, 67], "laci": [4, 5, 6, 7, 8, 50, 51], "repressor": [4, 5, 6, 7, 8, 50, 51], "inhibit": [4, 5, 6, 7, 8, 50, 51], "gene": [4, 5, 6, 7, 8, 50, 51], "5": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 42, 43, 52, 53, 57], "6": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "we": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 31, 32, 33, 34, 35, 36, 50, 51], "between": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "current": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "action": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68], "rel": [4, 5, 6, 7, 8, 50, 51], "intens": [4, 5, 6, 7, 8, 50, 51], "light": [4, 5, 6, 7, 8, 50, 51], "induc": [4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 51], "express": [4, 5, 6, 7, 8, 49, 50, 51], "cost": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 69], "comput": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "sum": [4, 5, 6, 7, 8, 13, 14, 15], "squar": [4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "differ": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "estim": [4, 5, 6, 7, 8, 13, 14, 15, 54], "actual": [4, 5, 6, 7, 8, 13, 14, 15, 54], "c": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 49, 52, 53], "p_1": [4, 5, 6, 7, 8, 50, 51], "r_1": [4, 5, 6, 7, 8, 11, 12, 15, 50, 51], "start": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53], "assign": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "uniform": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 50, 51], "random": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 52, 53, 68], "step": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 68], "reach": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 66], "exce": [4, 5, 6, 7, 8, 19, 20, 25, 50, 51, 54, 57], "solv": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "requir": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 69], "consid": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "averag": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "300": [4, 5, 6, 7, 8, 13, 14, 15, 46], "how": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 69], "import": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "v1": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "On": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "user": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 63, 64, 65, 66, 68], "bound": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 63], "t": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48], "time": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 57, 58, 59, 60, 61, 63, 66, 67], "dt": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "size": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "avail": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 55], "tau": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "sigma": [4, 5, 6, 7, 8, 13, 14, 15], "varianc": [4, 5, 6, 7, 8, 13, 14, 15], "nois": [4, 5, 6, 7, 8, 13, 14, 15], "befor": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47], "initialis": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "instanc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68], "render": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 54, 68], "mode": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "Not": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43], "target": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 33, 37, 40, 41, 42, 43], "mean": [4, 5, 6, 7, 8, 11, 12, 15, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 63], "amplitud": [4, 5, 6, 7, 8, 11, 12, 14, 15, 33, 37, 40, 41], "frequenc": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 33, 37, 40, 41, 54], "005": [4, 5, 6, 7, 8, 11, 12, 15, 21, 22, 25, 28, 29, 33, 34, 35, 36], "phase": [4, 5, 6, 7, 8, 33, 37, 40, 41], "shift": [4, 5, 6, 7, 8, 33, 37, 40, 41], "clip": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "thei": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 65, 66], "greater": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 35, 36, 52, 53, 63], "exclud": [4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 65, 66], "dtype": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "data": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53], "properti": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "alia": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "done": [4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 62, 64, 65, 66], "compat": [4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 69], "other": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 52, 53, 65, 66, 68], "physics_tim": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "physic": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "take": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 68], "perform": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "ob": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "truncat": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "exampl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 68], "goe": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "out": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49], "inform": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "about": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69], "seed": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 68], "By": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 50, 51, 53, 54], "randomli": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "period": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 33, 37, 40, 41, 65], "track": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 40, 41, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "form": [4, 5, 6, 7, 8], "y": [4, 5, 6, 7, 8, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 63, 64, 65, 66], "sin": [4, 5, 6, 7, 8, 14], "omega": [4, 5, 6, 7, 8], "phi": [4, 5, 6, 7, 8], "pi": [4, 5, 6, 7, 8, 19, 20, 25, 33, 37, 40, 41, 57], "f": [4, 5, 6, 7, 8], "frac": [4, 5, 6, 7, 8, 14], "where": [4, 5, 6, 7, 8, 14, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "offset": [4, 5, 6, 7, 8], "abstract": [4, 5, 6, 7, 8, 13, 14, 15], "frame": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "do": [4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 49, 54, 56, 57, 58, 59, 60, 61, 63, 68], "someth": [4, 5, 6, 7, 8, 13, 14, 15], "pop": [4, 5, 6, 7, 8, 13, 14, 15], "up": [4, 5, 6, 7, 8, 13, 14, 15, 33, 34, 35, 36], "window": [4, 5, 6, 7, 8, 13, 14, 15], "rais": [4, 5, 6, 7, 8, 13, 14, 15, 50, 51, 53, 66], "notimplementederror": [4, 5, 6, 7, 8, 13, 14, 15], "Will": [4, 5, 6, 7, 8, 13, 14, 15], "throw": [4, 5, 6, 7, 8, 13, 14, 15], "notimpli": [4, 5, 6, 7, 8, 13, 14, 15], "sinc": [4, 5, 6, 7, 8, 13, 14, 15, 33, 34, 35, 36, 47], "ha": [4, 5, 6, 7, 8, 13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "been": [4, 5, 6, 7, 8, 13, 14, 15, 33, 37, 38, 39, 40, 41, 42, 43, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "oscillatorcompl": [4, 7, 8, 46, 51], "inf": [4, 7, 8, 21, 22, 25, 33, 34, 35, 36], "challeng": [4, 7, 8, 51], "complic": [4, 7, 8, 55], "9": [4, 7, 8, 9, 10, 11, 12, 15, 52, 53], "10": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 36, 37, 39, 40, 41, 42, 43, 52, 53, 66], "extra": [4, 7, 8, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 51, 53], "regul": [5, 50], "repressil": [5, 50], "three": [5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 56, 57, 58, 59, 60, 61, 63], "regulatori": [5, 50], "dynam": [5, 50], "behaviour": [5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50], "elowitch": 5, "2000": 5, "random_step": [6, 8, 9, 11, 13, 17, 19, 21, 23, 27, 29, 30, 36, 39, 41, 43], "add": [7, 33, 34, 35, 36, 47, 51, 53, 56, 57, 58, 59, 60, 61, 63, 69], "4th": [7, 51], "its": [7, 51, 66, 67], "accompani": [7, 33, 37, 38, 39, 40, 41, 42, 43, 51], "It": [7, 9, 10, 15, 33, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "variabl": [8, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 51, 53, 56, 57, 58, 59, 60, 61], "cartpolecost": [9, 10, 15, 46, 55, 68], "cartpol": [9, 10, 11, 12, 15, 52, 53], "detail": [9, 10, 11, 12, 15, 46], "re": [9, 10, 15, 52], "result": [9, 10, 15, 47, 48, 52, 53, 54, 56, 58, 59, 61, 64, 65, 66], "pleas": [9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "note": [9, 10, 15, 46, 47, 50, 51, 52, 53, 65, 66, 68], "slight": [9, 10, 15, 52], "mai": [9, 10, 15, 52, 53, 56, 58, 59, 61, 64, 65, 66], "occur": [9, 10, 15, 52], "due": [9, 10, 15, 52], "mention": [9, 10, 15, 19, 20, 25, 52, 57], "below": [9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66], "For": [9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 40, 47, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69], "reproduct": [9, 10, 15, 52], "han2020": [9, 10, 15, 52], "branch": [9, 10, 15, 47, 52], "mirror": [9, 10, 15, 52], "studi": [9, 10, 15, 52], "access": [9, 10, 15, 52], "here": [9, 10, 15, 19, 20, 25, 35, 47, 52, 57, 68], "modifi": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "farma": [9, 10, 11, 12, 15], "foundat": [9, 10, 11, 12, 15], "packag": [9, 11, 36, 39, 41, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "first": [9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 50, 51, 52, 53, 54], "made": [9, 10, 11, 12, 15], "continu": [9, 10, 11, 12, 15, 52, 53], "contrast": [9, 10, 11, 12, 15, 52, 53], "discret": [9, 10, 11, 12, 15, 52, 53], "offer": [9, 10, 11, 12, 15, 52, 53], "confin": [9, 10, 11, 12, 15, 52, 53], "within": [9, 10, 11, 12, 15, 52, 53], "defin": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "prevent": [9, 10, 11, 12, 15, 33, 34, 35, 36, 52, 53, 63], "exceed": [9, 10, 11, 12, 15, 52, 53], "boundari": [9, 10, 11, 12, 15, 52, 53], "activ": [9, 10, 11, 12, 15, 47, 52, 53, 67], "reward": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "replac": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63], "definit": [9, 10, 11, 12, 15, 33, 37, 38, 39, 40, 41, 42, 43, 52, 53, 64, 65, 66, 69], "negat": [9, 10, 11, 12, 15, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 52, 53, 64, 65, 66], "line": [9, 10, 11, 12, 15, 52, 53], "lyapunov": [9, 10, 11, 12, 15, 52, 53], "stabil": [9, 10, 11, 12, 15, 52, 53], "theori": [9, 10, 11, 12, 15, 52, 53], "cart": [9, 10, 11, 12, 15, 50, 51, 52, 53, 65], "forc": [9, 10, 11, 12, 15, 17, 18, 25, 52, 53], "increas": [9, 10, 11, 12, 15, 47, 52, 53], "20": [9, 10, 11, 12, 15, 44, 45, 52, 53], "reduc": [9, 10, 11, 12, 15, 52, 53], "500": [9, 10, 11, 12, 15, 46, 52, 53], "250": [9, 10, 11, 12, 15, 46, 52, 53], "introduc": [9, 10, 11, 12, 15, 50, 51, 52, 53], "earli": [9, 10, 11, 12, 15, 52, 53], "promot": [9, 10, 11, 12, 15, 52, 53], "minim": [9, 10, 11, 12, 15, 33, 34, 35, 36, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "angl": [9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63], "12": [9, 10, 11, 12, 15, 52, 53], "degre": [9, 10, 11, 12, 15, 52, 53], "enhanc": [9, 10, 11, 12, 15, 50, 51, 52, 53], "recoveri": [9, 10, 11, 12, 15, 52, 53], "extend": [9, 10, 11, 12, 15, 33, 37, 40, 41, 52, 53, 56, 57, 58, 59, 60, 61, 63, 65], "meter": [9, 10, 11, 12, 15, 33, 34, 35, 36, 52, 53], "broaden": [9, 10, 11, 12, 15, 52, 53], "veloc": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 52, 53, 56, 57, 58, 59, 60, 61, 63], "pm": [9, 10, 11, 12, 15], "50": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 52, 53], "acceler": [9, 10, 11, 12, 15, 52, 53], "train": [9, 10, 11, 12, 15, 52, 53, 54, 55, 68], "angular": [9, 10, 11, 12, 15, 33, 37, 38, 39, 42, 43, 52, 53, 64, 66], "improv": [9, 10, 11, 12, 15, 52, 53], "effici": [9, 10, 11, 12, 15, 52, 53], "05": [9, 10, 11, 12, 13, 14, 15, 52, 53], "explor": [9, 10, 11, 12, 15, 52, 53], "interest": [9, 10, 15, 33, 37, 40, 41, 50, 51, 52, 65], "unlik": [9, 10, 11, 12, 15, 52, 53], "fix": [9, 10, 11, 12, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 52, 53, 64, 65, 66], "via": [9, 10, 11, 12, 15], "adapt": [9, 10, 11, 12, 15, 52, 53], "graviti": [9, 10, 11, 12, 15, 52, 53], "constant": [9, 10, 11, 12, 15, 50, 51, 52, 53, 65], "back": [9, 10, 11, 12, 15, 19, 20, 25, 52, 53, 57], "real": [9, 10, 11, 12, 15, 52, 53], "world": [9, 10, 11, 12, 15, 33, 34, 35, 36, 52, 53, 63], "align": [9, 10, 11, 12, 14, 15, 52, 53], "closer": [9, 10, 11, 12, 15, 52, 53], "diverg": [9, 10, 11, 12, 15, 52, 53], "float32": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 52, 53], "pole": [9, 10, 11, 12, 15, 52, 53], "698": [9, 10, 11, 12, 15], "rad": [9, 10, 11, 12, 13, 14, 15], "40": [9, 10, 11, 12, 15, 33, 37, 38, 39, 40, 41], "deg": [9, 10, 11, 12, 15], "50rad": [9, 10, 11, 12, 15], "while": [9, 10, 11, 12, 15, 52], "abov": [9, 10, 11, 12, 15, 47, 48, 49], "denot": [9, 10, 11, 12, 15], "element": [9, 10, 11, 12, 15], "reflect": [9, 10, 11, 12, 15], "un": [9, 10, 11, 12, 15], "particularli": [9, 10, 11, 12, 15], "index": [9, 10, 11, 12, 15, 69], "leav": [9, 10, 11, 12, 15, 33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "radian": [9, 10, 11, 12, 15, 33, 34, 35, 36, 37, 42, 43], "349": [9, 10, 11, 12, 15], "control": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69], "point": [9, 10, 11, 12, 15], "center": [9, 10, 11, 12, 15, 52, 53], "vari": [9, 10, 11, 12, 15], "amount": [9, 10, 11, 12, 15], "energi": [9, 10, 11, 12, 15, 33, 34, 35, 36, 63], "need": [9, 10, 11, 12, 15, 33, 37, 42, 43, 47, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 65, 66], "move": [9, 10, 11, 12, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 64, 65, 66], "underneath": [9, 10, 11, 12, 15], "given": [9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 63, 66], "simul": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "zero": [9, 10, 15, 33, 34, 35, 36, 37, 38, 39, 52, 64, 66], "x_": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "theta": [9, 10, 11, 12, 15, 52, 53], "theta_": [9, 10, 11, 12, 15, 33, 37, 38, 39, 52, 53, 64], "m": [9, 10, 11, 12, 15, 47, 52, 53], "edg": [9, 10, 11, 12, 15, 52, 53], "displai": [9, 10, 11, 12, 15, 52, 53], "less": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "equal": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "over": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 58, 59, 61, 63], "consecut": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "trial": [9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "self": [9, 10, 11, 12, 15], "target_po": [9, 10, 11, 12, 15], "constraint_po": [9, 10, 11, 12, 15], "constraint": [9, 10, 11, 12, 15, 52], "kinematics_integr": [9, 10, 11, 12, 15], "kinemat": [9, 10, 11, 12, 15], "integr": [9, 10, 11, 12, 15, 55], "updat": [9, 10, 11, 12, 15, 46, 47, 53, 56, 58, 59, 61, 64, 65, 66], "euler": [9, 10, 11, 12, 15, 33, 37, 38, 39, 40, 41, 42, 43], "semi": [9, 10, 11, 12, 15], "implicit": [9, 10, 11, 12, 15], "theta_threshold_radian": [9, 10, 11, 12, 15], "x_threshold": [9, 10, 11, 12, 15], "max_v": [9, 10, 11, 12, 15], "max_w": [9, 10, 11, 12, 15], "total_mass": [9, 10, 11, 12, 15], "full": [9, 10, 11, 12, 15], "mass": [9, 10, 11, 12, 15], "_com_length": [9, 10, 11, 12, 15], "polemass_length": [9, 10, 11, 12, 15], "com": [9, 10, 11, 12, 15, 46], "pole_mass_length": [9, 10, 11, 12, 15], "mass_pol": [9, 10, 11, 12, 15], "masspol": [9, 10, 11, 12, 15], "mass_cart": [9, 10, 11, 12, 15], "masscart": [9, 10, 11, 12, 15], "timestep": [9, 10, 11, 12, 15, 68], "metadata": [9, 10, 11, 12, 15, 33, 34, 35, 36], "set_param": [9, 10, 11, 12, 15], "mass_of_cart": [9, 10, 11, 12, 15], "mass_of_pol": [9, 10, 11, 12, 15], "most": [9, 10, 11, 12, 15], "get_param": [9, 10, 11, 12, 15], "pole_mass": [9, 10, 11, 12, 15], "reset_param": [9, 10, 11, 12, 15], "arg": [9, 10, 11, 12, 15, 33, 34, 35, 36, 68], "close": [9, 10, 11, 12, 15, 33, 34, 35, 36, 63, 68], "down": [9, 10, 11, 12, 15, 33, 34, 35, 36], "viewer": [9, 10, 11, 12, 15], "found": [10, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 52, 53, 55, 68], "librari": [10, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 55, 56, 57, 58, 59, 60, 61, 62, 67], "describ": [10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66], "wherein": [10, 12], "some": [10, 12, 33, 47, 68], "slightli": [10, 12, 47], "cartpoletrackingcost": [11, 12, 15, 46, 55], "task": [11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 52, 53, 56, 57, 58, 59, 60, 61, 63], "two": [11, 12, 15, 50, 51, 53], "facilit": [11, 12, 15, 53], "provid": [11, 12, 15, 46, 49, 53, 55], "ref": [11, 12, 15, 53], "60": [11, 12, 15, 53], "enabl": [12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 47, 56, 57, 58, 59, 60, 61], "noisi": [13, 14, 15, 54], "master": [13, 14, 15, 54], "slave": [13, 14, 15, 54], "ex3ekf": [13, 14, 15, 46, 55], "clipped_act": [13, 14, 15], "perfectli": [13, 14, 15, 54], "serv": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 54], "rl": [13, 14, 15, 32, 33, 54, 55, 69], "stationari": [13, 14, 15, 54], "kalman": [13, 14, 15, 54], "filter": [13, 14, 15, 54], "wu": [13, 14, 15, 54], "2023": [13, 14, 15, 33, 37, 38, 39, 40, 41, 42, 43, 54, 67], "10000": [13, 14, 15], "hz": [13, 14, 15], "come": [13, 14, 15, 54, 62], "second": [13, 14, 15, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54], "hat": [13, 14, 15], "_1": [13, 14, 15], "x_1": [13, 14, 15, 54], "_2": [13, 14, 15], "x_2": [13, 14, 15, 54], "higher": [13, 14, 15], "whose": 14, "begin": 14, "split": 14, "k": 14, "w": [14, 52, 53], "end": [14, 30, 31, 32, 33, 62], "x_3": 14, "measur": 14, "cdot": 14, "v": [14, 33, 34, 35, 36], "bmatrix": 14, "sim": 14, "mathcal": 14, "n": [14, 67], "left": [14, 30, 31, 32, 33, 62], "right": [14, 30, 31, 32, 33, 49, 62], "q_1": 14, "q_2": 14, "design": [14, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "u": 14, "u1": [14, 52, 53, 54], "u2": [14, 54], "u3": 14, "l": 14, "polici": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 68], "classic": [15, 69], "problem": [15, 55], "antcost": [17, 18, 25, 46, 55], "reference_forward_veloc": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "randomise_reference_forward_veloc": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "randomise_reference_forward_velocity_rang": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "forward_velocity_weight": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "include_ctrl_cost": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 56, 57, 58, 59, 60, 61], "include_health_penalti": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 58, 59, 61, 63, 64, 65, 66], "health_penalty_s": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "ctrl_cost_weight": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "0001": [17, 18, 19, 20, 23, 24, 25, 26, 27], "use_contact_forc": [17, 18, 25], "contact_cost_weight": [17, 18, 25], "0005": [17, 18, 25], "terminate_when_unhealthi": [17, 18, 21, 22, 23, 24, 25, 28, 29], "healthy_z_rang": [17, 18, 21, 22, 23, 24, 25, 28, 29], "contact_force_rang": [17, 18, 25], "reset_noise_scal": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "exclude_current_positions_from_observ": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "exclude_x_velocity_from_observ": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "ant_v4": [17, 18, 25], "antenv": [17, 18, 25], "ezpickl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "ant": [17, 18, 25, 56], "compar": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 37, 40, 41, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "To": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 47, 48, 56, 57, 58, 59, 60, 61, 63, 67], "forward": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "addition": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 42, 43, 47, 48, 53, 63, 66], "health": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 58, 59, 61, 63, 64, 65, 66], "penalti": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 56, 58, 59, 61, 63, 64, 65, 66], "These": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 52, 53, 56, 57, 58, 59, 60, 61, 63, 65, 66], "exclude_velocity_from_observ": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 56, 57, 58, 59, 60, 61], "rest": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "g": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66], "etc": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66], "w_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 52, 53, 56, 57, 58, 59, 60, 61, 63], "_veloc": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "_x": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "ctrl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61], "c_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "p_": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 58, 59, 61, 62, 63, 64, 65, 66], "try": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "weight": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "penal": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "too": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 63], "larg": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "becom": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47], "unhealthi": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 58, 59, 61, 63, 64, 65, 66], "fall": [17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 56, 57, 58, 59, 61, 63], "1e": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "contact": [17, 18, 25, 47], "5e": [17, 18, 21, 22, 25, 28, 29], "healthi": [17, 18, 21, 22, 23, 24, 25, 28, 29], "z": [17, 18, 21, 22, 23, 24, 25, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 63, 64, 65, 66], "perturb": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "coordin": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "front": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "tip": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "induct": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "bia": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "agnost": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "compon": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "x_veloc": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36], "ctrl_cost": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "overrid": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "halfcheetahcost": [19, 20, 25, 46, 55], "half_cheetah_v4": [19, 20, 25], "halfcheetahenv": [19, 20, 25], "halfcheetah": [19, 20, 25, 57], "cheetah": [19, 20, 25, 57], "thigh": [19, 20, 25, 57], "condit": [19, 20, 25, 49, 57], "part": [19, 20, 25, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "half": [19, 20, 25, 57], "gymnasiuml": 20, "half_cheetah": 20, "hoppercost": [21, 22, 25, 46, 55], "001": [21, 22, 25, 28, 29], "healthy_state_rang": [21, 22, 25], "healthy_angle_rang": [21, 22, 25, 28, 29], "hopper_v4": [21, 22, 25], "hopperenv": [21, 22, 25], "hopper": [21, 22, 25, 56, 58], "humanoidcost": [23, 24, 25, 46, 55], "01": [23, 24, 25, 33, 34, 35, 36], "humanoid_v4": [23, 24, 25], "humanoidenv": [23, 24, 25], "humanoid": [23, 24, 25, 59], "swimmercost": [25, 26, 27, 46, 55, 68], "swimmer_v4": [25, 26, 27], "swimmerenv": [25, 26, 27], "swimmer": [25, 26, 27, 60], "walker2dcost": [25, 28, 29, 46, 55], "walker2d_v4": [25, 28, 29], "walker2denv": [25, 28, 29], "walker2d": [25, 28, 29, 61], "walker": [25, 28, 29, 61], "2d": [25, 28, 29, 59, 61], "fetchreachcost": [30, 31, 32, 33, 46, 55, 68], "gymnasium_robot": [30, 31, 32, 33], "mujocofetchreachenv": [30, 31, 32, 33], "fetchreach": [30, 31, 32, 33, 62], "absolut": [30, 31, 32, 33, 50, 51, 62], "effector": [30, 31, 32, 33, 62], "euclidean": [30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 62, 64], "distanc": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 64], "accept": [30, 31, 32, 33, 47], "except": [30, 31, 32, 33], "reward_typ": [30, 31, 32, 33], "becaus": [30, 31, 32, 33, 37, 42, 43, 47], "dens": [30, 31, 32, 33], "calcul": [30, 31, 32, 33], "goalenv": [32, 33], "achieved_go": [32, 33], "achiev": [32, 33, 62], "execut": [32, 33], "desired_go": [32, 33], "ask": [32, 33], "attempt": [32, 33], "algorithm": [32, 33, 55, 69], "expect": [32, 33, 47], "instead": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 64, 65, 66], "flattenobserv": [32, 33], "flatten": [32, 33], "minitaurbulletcost": [33, 34, 35, 36, 46, 55, 68], "include_energy_cost": [33, 34, 35, 36, 63], "energy_weight": [33, 34, 35, 36], "include_shake_cost": [33, 34, 35, 36, 63], "shake_weight": [33, 34, 35, 36], "include_drift_cost": [33, 34, 35, 36, 63], "drift_weight": [33, 34, 35, 36], "distance_limit": [33, 34, 35, 36], "backward_velocity_bound": [33, 34, 35, 36], "fall_criteria_up_rot": [33, 34, 35, 36], "85": [33, 34, 35, 36], "fall_criteria_z_posit": [33, 34, 35, 36], "13": [33, 34, 35, 36], "pybullet_env": [33, 34, 35, 36], "bullet": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "minitaur_gym_env": [33, 34, 35, 36], "minitaurbulletenv": [33, 34, 35, 36, 63], "pybullet": [33, 34, 35, 36, 63], "backward": [33, 34, 35, 36, 63], "walk": [33, 34, 35, 36, 63], "criteria": [33, 34, 35, 36, 63], "thu": [33, 34, 35, 36, 63], "codebas": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 63], "articl": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 63], "tan": [33, 34, 35, 36, 63], "2018": [33, 34, 35, 36, 63], "author": [33, 34, 35, 36, 49], "disabl": [33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "have": [33, 34, 35, 36, 47, 50, 51, 54, 55, 68], "kept": [33, 34, 35, 36], "consist": [33, 34, 35, 36, 50, 51, 64, 65, 66], "28": [33, 34, 35, 36], "torqu": [33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "motor": [33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "eight": [33, 34, 35, 36, 56, 57, 58, 59, 60, 61, 63], "minu": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "taken": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 64, 65, 66], "alwai": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "orient": [33, 34, 35, 36, 63], "ground": [33, 34, 35, 36, 63], "26": [33, 34, 35, 36], "envcompat": [33, 34, 35, 36], "side": [33, 34, 35, 36], "effect": [33, 34, 35, 36, 37, 42, 43], "shake": [33, 34, 35, 36, 63], "drift": [33, 34, 35, 36, 63], "movement": [33, 34, 35, 36, 63], "direct": [33, 34, 35, 36], "travel": [33, 34, 35, 36], "per": [33, 34, 35, 36], "rotat": [33, 34, 35, 36], "time_limit_max_episode_step": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "base_veloc": [33, 34, 35, 36], "setup": [33, 34, 35, 36, 47, 67], "why": [33, 34, 35, 36, 47], "energy_cost": [33, 34, 35, 36], "drift_cost": [33, 34, 35, 36], "shake_cost": [33, 34, 35, 36], "_termin": [33, 34, 35, 36], "so": [33, 34, 35, 36, 49, 54], "minimum": [33, 34, 35, 36, 68], "boolean": [33, 34, 35, 36, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "indic": [33, 34, 35, 36], "is_fallen": [33, 34, 35, 36], "fallen": [33, 34, 35, 36], "larger": [33, 34, 35, 36], "dot": [33, 34, 35, 36, 52, 53], "product": [33, 34, 35, 36], "smaller": [33, 34, 35, 36], "_fall_criteria_up_rot": [33, 34, 35, 36], "height": [33, 34, 35, 36], "_fall_criteria_z_posit": [33, 34, 35, 36], "give": [33, 34, 35, 36, 47], "abil": [33, 34, 35, 36], "quadxhovercost": [33, 37, 38, 39, 46, 55, 68], "flight_dome_s": [33, 37, 38, 39, 40, 41, 42, 43], "angle_represent": [33, 37, 38, 39, 40, 41, 42, 43], "quaternion": [33, 37, 38, 39, 40, 41, 42, 43], "agent_hz": [33, 37, 38, 39, 40, 41, 42, 43], "render_resolut": [33, 37, 38, 39, 40, 41, 42, 43], "480": [33, 37, 38, 39, 40, 41, 42, 43], "pyflyt": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "gym_env": [33, 37, 38, 39, 40, 41, 42, 43], "quadx_env": [33, 37, 38, 39, 40, 41, 42, 43], "quadx_hover_env": [33, 37, 38, 39, 40, 41], "quadxhoverenv": [33, 37, 38, 39, 40, 41], "quadxhov": [33, 37, 38, 39, 40, 41, 64, 65], "tai": [33, 37, 38, 39, 40, 41, 42, 43], "outsid": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "flight": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "dome": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "crash": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "max_duration_second": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "durat": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "hover": [33, 37, 38, 39, 64], "p": [33, 37, 38, 39, 40, 41, 42, 43, 62, 64, 65, 66], "roll": [33, 37, 38, 39, 64, 66], "pitch": [33, 37, 38, 39, 64, 66], "drone": [33, 37, 38, 39, 40, 41, 42, 43, 64, 65, 66], "looprat": [33, 37, 38, 39, 40, 41, 42, 43], "initial_physics_tim": [33, 37, 38, 39, 40, 41, 42, 43], "startup": [33, 37, 38, 39, 40, 41, 42, 43], "after": [33, 37, 38, 39, 40, 41, 42, 43, 46, 67], "fly": [33, 37, 38, 39, 40, 41, 42, 43], "area": [33, 37, 38, 39, 40, 41, 42, 43], "represent": [33, 37, 38, 39, 40, 41, 42, 43], "interact": [33, 37, 38, 39, 40, 41, 42, 43], "resolut": [33, 37, 38, 39, 40, 41, 42, 43], "time_limit": [33, 37, 38, 39, 40, 41, 42, 43], "quadxtrackingcost": [33, 37, 40, 41, 46, 55], "25": [33, 37, 40, 41], "quadx": [33, 37, 40, 41], "trajectori": [33, 37, 40, 41, 65], "visualize_refer": [33, 37, 40, 41], "visual": [33, 37, 40, 41], "quadxwaypointscost": [33, 37, 42, 43, 46, 55], "num_target": [33, 37, 42, 43], "use_yaw_target": [33, 37, 42, 43], "goal_reach_dist": [33, 37, 42, 43], "goal_reach_angl": [33, 37, 42, 43], "30": [33, 37, 42, 43], "exclude_waypoint_targets_from_observ": [33, 37, 42, 43, 66], "only_observe_immediate_waypoint": [33, 37, 42, 43, 66], "exclude_waypoint_target_deltas_from_observ": [33, 37, 42, 43, 66], "only_observe_immediate_waypoint_target_delta": [33, 37, 42, 43], "quadx_waypoints_env": [33, 37, 42, 43], "quadxwaypointsenv": [33, 37, 42, 43], "quadxwaypoint": [33, 37, 42, 43, 65, 66], "waypoint": [33, 37, 42, 43, 66], "awai": [33, 37, 42, 43, 66], "yaw": [33, 37, 42, 43], "immedi": [33, 37, 42, 43, 66], "delta": [33, 37, 42, 43, 66], "immediate_waypoint_target": [33, 37, 42, 43], "env_complet": [33, 37, 42, 43], "num_targets_reach": [33, 37, 42, 43], "complet": [33, 37, 42, 43], "cost_info": [33, 37, 42, 43], "compute_target_delta": [33, 37, 42, 43], "ang_po": [33, 37, 42, 43], "lin_po": [33, 37, 42, 43], "quarternion": [33, 37, 42, 43], "doesn": [33, 37, 42, 43, 47, 48], "expos": [33, 37, 42, 43], "minitaurbullet": 35, "appear": 35, "_": [38, 40, 42, 68], "entry_point": [44, 46], "regist": [44, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "__version__": [44, 45, 46], "__version_tuple__": [44, 45, 46], "your": [46, 47, 67], "registr": 46, "todo": 46, "reward_threshold": 46, "400": 46, "http": 46, "github": [46, 48], "bulletphys": 46, "bullet3": 46, "issu": 46, "4369": 46, "additional_wrapp": 46, "wrapper_spec": 46, "val": 46, "id": 46, "els": 46, "disable_env_check": 46, "apply_api_compat": 46, "love": 47, "project": 47, "easi": 47, "transpar": 47, "discuss": 47, "submit": 47, "propos": 47, "maintain": 47, "host": 47, "best": 47, "welcom": 47, "fork": 47, "repo": 47, "main": 47, "test": [47, 53, 55, 56, 58, 59, 61, 64, 65, 66], "ve": [47, 50, 51], "api": 47, "ensur": 47, "build": [47, 69], "suit": 47, "npm": 47, "run": [47, 48, 68], "snapshot": 47, "fail": 47, "intend": 47, "necessari": 47, "command": [47, 48], "lint": 47, "onto": 47, "success": 47, "machin": 47, "could": 47, "sometim": [47, 48], "architectur": 47, "temporarili": 47, "stash": 47, "latest": 47, "upstream": 47, "again": 47, "public": 47, "open": 47, "think": 47, "good": 47, "model": 47, "anoth": 47, "craig": 47, "hockenberri": 47, "app": 47, "greatli": 47, "respect": 47, "commun": 47, "great": 47, "tend": 47, "quick": 47, "summari": 47, "Be": 47, "specif": 47, "stackoverflow": 47, "question": 47, "anyon": 47, "r": [47, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 65], "what": 47, "would": 47, "possibli": 47, "might": [47, 53, 56, 58, 59, 61, 64, 65, 66], "stuff": 47, "tri": [47, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "didn": 47, "peopl": 47, "thorough": 47, "even": 47, "kid": 47, "excel": 47, "repositori": 47, "guid": 47, "convent": 47, "recommend": [47, 67], "commitizen": 47, "benefici": 47, "help": 47, "languag": 47, "qualiti": 47, "readabl": 47, "usabl": 47, "flake8": 47, "linter": 47, "script": 47, "black": 47, "formatt": 47, "accord": 47, "remark": 47, "against": 47, "As": [47, 53, 56, 58, 59, 61, 64, 65, 66], "met": 47, "receiv": 47, "warn": 47, "violat": [47, 52], "handl": 47, "yourself": [47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "merg": [47, 49], "correct": 47, "structur": 47, "enforc": 47, "instal": [47, 69], "node": 47, "pip": [47, 48, 67], "dev": 47, "huski": 47, "automat": [47, 48], "tool": 47, "must": [47, 48, 52], "adher": 47, "short": 47, "submiss": 47, "understood": 47, "cover": 47, "feel": 47, "free": [47, 49], "concern": 47, "python": [48, 69], "plugin": 48, "insid": 48, "folder": [48, 68], "doc": 48, "html": 48, "go": 48, "directori": 48, "successfulli": [48, 67], "built": 48, "linkcheck": 48, "broken": 48, "link": 48, "conda": [48, 67], "show": 48, "stdout": 48, "find": 48, "site": 48, "workflow": 48, "releas": 48, "manual": 48, "through": [48, 67], "interfac": 48, "mit": 49, "copyright": 49, "2022": 49, "rick": 49, "staa": 49, "permiss": 49, "herebi": 49, "grant": 49, "charg": 49, "person": 49, "obtain": 49, "copi": 49, "softwar": 49, "associ": 49, "deal": 49, "restrict": 49, "publish": 49, "sublicens": 49, "sell": 49, "permit": 49, "whom": 49, "furnish": 49, "subject": 49, "notic": 49, "shall": 49, "substanti": 49, "portion": 49, "THE": 49, "AS": 49, "warranti": 49, "OF": 49, "kind": 49, "OR": 49, "impli": 49, "BUT": 49, "NOT": 49, "TO": 49, "merchant": 49, "fit": 49, "FOR": 49, "particular": 49, "purpos": 49, "AND": 49, "noninfring": 49, "IN": 49, "NO": 49, "event": 49, "holder": 49, "BE": 49, "liabl": 49, "claim": 49, "damag": 49, "liabil": 49, "contract": 49, "tort": 49, "otherwis": 49, "aris": 49, "connect": 49, "WITH": 49, "tailor": [50, 51], "context": [50, 51], "m_1": [50, 51], "m_2": [50, 51], "m_3": [50, 51], "p_2": [50, 51], "p_3": [50, 51], "r_": [50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 65], "last": [50, 51, 53], "correctli": [50, 51, 53, 65, 66], "u_1": [50, 51], "u_2": [50, 51], "u_3": [50, 51], "info_dict": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "state_of_interest": [50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "soi": [50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "reference_error": [50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "therefor": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "stand": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "alon": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "doe": [50, 51, 52, 54], "m_4": 51, "p_4": 51, "u_4": 51, "unactu": [52, 53], "joint": [52, 53, 56, 57, 58, 59, 60, 61, 63], "attach": [52, 53], "frictionless": [52, 53], "alter": [52, 53], "further": [52, 53], "similar": [52, 53], "pendulum": [52, 53], "upright": [52, 53], "criterion": 53, "cumul": 53, "hasten": 53, "_error": 53, "secondari": 53, "thoroughli": [53, 56, 58, 59, 61, 64, 65, 66], "bug": [53, 56, 58, 59, 61, 64, 65, 66], "futur": [53, 56, 58, 59, 61, 64, 65, 66], "hat_x_1": 54, "hat_x_2": 54, "varieti": 55, "reinforc": 55, "learn": [55, 69], "ro": 55, "reloc": 55, "distinct": 55, "known": 55, "gazebo": 55, "those": 55, "crucial": 55, "configur": [55, 64, 65, 66], "positive_reward": 55, "actuat": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "v4": [56, 57, 58, 59, 60, 61], "fact": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "v_": [56, 57, 58, 59, 60, 61, 63], "being": [56, 58, 59, 61, 63, 64, 65, 66, 68], "17": 59, "dof": 62, "mobil": 62, "manipul": 62, "v2": 62, "cartesian": 62, "v0": 63, "certain": 63, "hopmintaur": 63, "multirotor": [64, 65, 66], "unman": [64, 65, 66], "aerial": [64, 65, 66], "vehicl": [64, 65, 66], "uav": [64, 65, 66], "quad": [64, 65, 66], "ardupilot": [64, 65, 66], "px4": [64, 65, 66], "four": [64, 65, 66], "cascad": [64, 65, 66], "pid": [64, 65, 66], "flat": [65, 66], "stack": [65, 66], "s_": 66, "waypoints_": 66, "only_observe_immediate_waypoint_delta": 66, "previou": 66, "19": 67, "anaconda": 67, "mani": 67, "valuabl": 67, "well": 67, "manag": 67, "simpl": [67, 68], "instruct": 67, "offici": 67, "websit": 67, "download": 67, "anaconda3": 67, "write": 67, "organ": 67, "just": 67, "altern": 67, "venv": 67, "virtual": 67, "bare": 68, "1000": 68, "print": 68, "consol": 68, "env_nam": 68, "__name__": 68, "__main__": 68, "def": 68, "action_spac": 68, "loop": 68, "42": 68, "pre": 69, "requisit": 69, "contribut": 69, "guidelin": 69, "__init__": 69, "py": 69, "deploi": 69, "licens": 69, "modul": 69, "search": 69}, "objects": {"": [[44, 0, 0, "-", "stable_gym"]], "stable_gym": [[44, 1, 1, "", "ENVS"], [44, 2, 1, "", "MaxEpisodeStepsInjectionWrapper"], [44, 1, 1, "", "__version__"], [44, 1, 1, "", "__version_tuple__"], [1, 0, 0, "-", "common"], [16, 0, 0, "-", "envs"], [45, 0, 0, "-", "version"]], "stable_gym.common": [[1, 2, 1, "", "MaxEpisodeStepsInjectionWrapper"], [2, 0, 0, "-", "max_episode_steps_injection_wrapper"], [3, 0, 0, "-", "utils"]], "stable_gym.common.max_episode_steps_injection_wrapper": [[2, 2, 1, "", "MaxEpisodeStepsInjectionWrapper"], [2, 3, 1, "", "get_time_limit_wrapper_max_episode_steps"], [2, 3, 1, "", "inject_attribute_into_base_env"]], "stable_gym.common.utils": [[3, 3, 1, "", "abbreviate"], [3, 3, 1, "", "change_dict_key"], [3, 3, 1, "", "change_precision"], [3, 3, 1, "", "colorize"], [3, 3, 1, "", "convert_gym_box_to_gymnasium_box"], [3, 3, 1, "", "friendly_list"], [3, 3, 1, "", "get_flattened_keys"], [3, 3, 1, "", "get_flattened_values"], [3, 3, 1, "", "get_lowest_next_int"], [3, 3, 1, "", "inject_value"], [3, 3, 1, "", "maybe_parse_reset_bounds"], [3, 3, 1, "", "strip_underscores"], [3, 3, 1, "", "verify_number_and_cast"]], "stable_gym.envs": [[4, 0, 0, "-", "biological"], [15, 0, 0, "-", "classic_control"], [25, 0, 0, "-", "mujoco"], [33, 0, 0, "-", "robotics"]], "stable_gym.envs.biological": [[4, 2, 1, "", "Oscillator"], [4, 2, 1, "", "OscillatorComplicated"], [5, 0, 0, "-", "oscillator"], [7, 0, 0, "-", "oscillator_complicated"]], "stable_gym.envs.biological.Oscillator": [[4, 4, 1, "", "dt"], [4, 4, 1, "", "max_cost"], [4, 5, 1, "", "physics_time"], [4, 6, 1, "", "reference"], [4, 6, 1, "", "render"], [4, 6, 1, "", "reset"], [4, 4, 1, "", "sigma"], [4, 4, 1, "", "state"], [4, 6, 1, "", "step"], [4, 4, 1, "", "t"], [4, 5, 1, "", "tau"]], "stable_gym.envs.biological.OscillatorComplicated": [[4, 4, 1, "", "dt"], [4, 4, 1, "", "max_cost"], [4, 5, 1, "", "physics_time"], [4, 6, 1, "", "reference"], [4, 6, 1, "", "render"], [4, 6, 1, "", "reset"], [4, 4, 1, "", "sigma"], [4, 4, 1, "", "state"], [4, 6, 1, "", "step"], [4, 4, 1, "", "t"], [4, 5, 1, "", "tau"]], "stable_gym.envs.biological.oscillator": [[5, 2, 1, "", "Oscillator"], [6, 0, 0, "-", "oscillator"]], "stable_gym.envs.biological.oscillator.Oscillator": [[5, 4, 1, "", "dt"], [5, 4, 1, "", "max_cost"], [5, 5, 1, "", "physics_time"], [5, 6, 1, "", "reference"], [5, 6, 1, "", "render"], [5, 6, 1, "", "reset"], [5, 4, 1, "", "sigma"], [5, 4, 1, "", "state"], [5, 6, 1, "", "step"], [5, 4, 1, "", "t"], [5, 5, 1, "", "tau"]], "stable_gym.envs.biological.oscillator.oscillator": [[6, 1, 1, "", "EPISODES"], [6, 2, 1, "", "Oscillator"], [6, 1, 1, "", "RANDOM_STEP"], [6, 1, 1, "", "env"]], "stable_gym.envs.biological.oscillator.oscillator.Oscillator": [[6, 4, 1, "", "dt"], [6, 4, 1, "", "max_cost"], [6, 5, 1, "", "physics_time"], [6, 6, 1, "", "reference"], [6, 6, 1, "", "render"], [6, 6, 1, "", "reset"], [6, 4, 1, "", "sigma"], [6, 4, 1, "", "state"], [6, 6, 1, "", "step"], [6, 4, 1, "", "t"], [6, 5, 1, "", "tau"]], "stable_gym.envs.biological.oscillator_complicated": [[7, 2, 1, "", "OscillatorComplicated"], [8, 0, 0, "-", "oscillator_complicated"]], "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated": [[7, 4, 1, "", "dt"], [7, 4, 1, "", "max_cost"], [7, 5, 1, "", "physics_time"], [7, 6, 1, "", "reference"], [7, 6, 1, "", "render"], [7, 6, 1, "", "reset"], [7, 4, 1, "", "sigma"], [7, 4, 1, "", "state"], [7, 6, 1, "", "step"], [7, 4, 1, "", "t"], [7, 5, 1, "", "tau"]], "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated": [[8, 1, 1, "", "EPISODES"], [8, 2, 1, "", "OscillatorComplicated"], [8, 1, 1, "", "RANDOM_STEP"], [8, 1, 1, "", "env"]], "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated": [[8, 4, 1, "", "dt"], [8, 4, 1, "", "max_cost"], [8, 5, 1, "", "physics_time"], [8, 6, 1, "", "reference"], [8, 6, 1, "", "render"], [8, 6, 1, "", "reset"], [8, 4, 1, "", "sigma"], [8, 4, 1, "", "state"], [8, 6, 1, "", "step"], [8, 4, 1, "", "t"], [8, 5, 1, "", "tau"]], "stable_gym.envs.classic_control": [[15, 2, 1, "", "CartPoleCost"], [15, 2, 1, "", "CartPoleTrackingCost"], [15, 2, 1, "", "Ex3EKF"], [10, 0, 0, "-", "cartpole_cost"], [12, 0, 0, "-", "cartpole_tracking_cost"], [14, 0, 0, "-", "ex3_ekf"]], "stable_gym.envs.classic_control.CartPoleCost": [[15, 5, 1, "", "_com_length"], [15, 6, 1, "", "close"], [15, 4, 1, "", "constraint_pos"], [15, 6, 1, "", "cost"], [15, 5, 1, "", "dt"], [15, 6, 1, "", "get_params"], [15, 4, 1, "", "kinematics_integrator"], [15, 5, 1, "", "mass_cart"], [15, 5, 1, "", "mass_pole"], [15, 4, 1, "", "max_cost"], [15, 4, 1, "", "max_v"], [15, 4, 1, "", "max_w"], [15, 4, 1, "", "metadata"], [15, 5, 1, "", "physics_time"], [15, 5, 1, "", "pole_mass_length"], [15, 5, 1, "", "polemass_length"], [15, 6, 1, "", "render"], [15, 6, 1, "", "reset"], [15, 6, 1, "", "reset_params"], [15, 6, 1, "", "set_params"], [15, 4, 1, "", "state"], [15, 6, 1, "", "step"], [15, 4, 1, "", "t"], [15, 4, 1, "", "target_pos"], [15, 4, 1, "", "tau"], [15, 4, 1, "", "theta_threshold_radians"], [15, 5, 1, "", "total_mass"], [15, 4, 1, "", "x_threshold"]], "stable_gym.envs.classic_control.CartPoleTrackingCost": [[15, 5, 1, "", "_com_length"], [15, 6, 1, "", "close"], [15, 4, 1, "", "constraint_pos"], [15, 6, 1, "", "cost"], [15, 5, 1, "", "dt"], [15, 6, 1, "", "get_params"], [15, 4, 1, "", "kinematics_integrator"], [15, 5, 1, "", "mass_cart"], [15, 5, 1, "", "mass_pole"], [15, 4, 1, "", "max_cost"], [15, 4, 1, "", "max_v"], [15, 4, 1, "", "max_w"], [15, 4, 1, "", "metadata"], [15, 5, 1, "", "physics_time"], [15, 5, 1, "", "pole_mass_length"], [15, 5, 1, "", "polemass_length"], [15, 6, 1, "", "reference"], [15, 6, 1, "", "render"], [15, 6, 1, "", "reset"], [15, 6, 1, "", "reset_params"], [15, 6, 1, "", "set_params"], [15, 4, 1, "", "state"], [15, 6, 1, "", "step"], [15, 4, 1, "", "t"], [15, 4, 1, "", "target_pos"], [15, 4, 1, "", "tau"], [15, 4, 1, "", "theta_threshold_radians"], [15, 5, 1, "", "total_mass"], [15, 4, 1, "", "x_threshold"]], "stable_gym.envs.classic_control.Ex3EKF": [[15, 4, 1, "", "dt"], [15, 5, 1, "", "physics_time"], [15, 6, 1, "", "reference"], [15, 6, 1, "", "render"], [15, 6, 1, "", "reset"], [15, 4, 1, "", "sigma"], [15, 4, 1, "", "state"], [15, 6, 1, "", "step"], [15, 4, 1, "", "t"], [15, 5, 1, "", "tau"]], "stable_gym.envs.classic_control.cartpole_cost": [[10, 2, 1, "", "CartPoleCost"], [9, 0, 0, "-", "cartpole_cost"]], "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost": [[10, 5, 1, "", "_com_length"], [10, 6, 1, "", "close"], [10, 4, 1, "", "constraint_pos"], [10, 6, 1, "", "cost"], [10, 5, 1, "", "dt"], [10, 6, 1, "", "get_params"], [10, 4, 1, "", "kinematics_integrator"], [10, 5, 1, "", "mass_cart"], [10, 5, 1, "", "mass_pole"], [10, 4, 1, "", "max_cost"], [10, 4, 1, "", "max_v"], [10, 4, 1, "", "max_w"], [10, 4, 1, "", "metadata"], [10, 5, 1, "", "physics_time"], [10, 5, 1, "", "pole_mass_length"], [10, 5, 1, "", "polemass_length"], [10, 6, 1, "", "render"], [10, 6, 1, "", "reset"], [10, 6, 1, "", "reset_params"], [10, 6, 1, "", "set_params"], [10, 4, 1, "", "state"], [10, 6, 1, "", "step"], [10, 4, 1, "", "t"], [10, 4, 1, "", "target_pos"], [10, 4, 1, "", "tau"], [10, 4, 1, "", "theta_threshold_radians"], [10, 5, 1, "", "total_mass"], [10, 4, 1, "", "x_threshold"]], "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost": [[9, 2, 1, "", "CartPoleCost"], [9, 1, 1, "", "EPISODES"], [9, 1, 1, "", "RANDOM_STEP"], [9, 1, 1, "", "env"]], "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost": [[9, 5, 1, "", "_com_length"], [9, 6, 1, "", "close"], [9, 4, 1, "", "constraint_pos"], [9, 6, 1, "", "cost"], [9, 5, 1, "", "dt"], [9, 6, 1, "", "get_params"], [9, 4, 1, "", "kinematics_integrator"], [9, 5, 1, "", "mass_cart"], [9, 5, 1, "", "mass_pole"], [9, 4, 1, "", "max_cost"], [9, 4, 1, "", "max_v"], [9, 4, 1, "", "max_w"], [9, 4, 1, "", "metadata"], [9, 5, 1, "", "physics_time"], [9, 5, 1, "", "pole_mass_length"], [9, 5, 1, "", "polemass_length"], [9, 6, 1, "", "render"], [9, 6, 1, "", "reset"], [9, 6, 1, "", "reset_params"], [9, 6, 1, "", "set_params"], [9, 4, 1, "", "state"], [9, 6, 1, "", "step"], [9, 4, 1, "", "t"], [9, 4, 1, "", "target_pos"], [9, 4, 1, "", "tau"], [9, 4, 1, "", "theta_threshold_radians"], [9, 5, 1, "", "total_mass"], [9, 4, 1, "", "x_threshold"]], "stable_gym.envs.classic_control.cartpole_tracking_cost": [[12, 2, 1, "", "CartPoleTrackingCost"], [11, 0, 0, "-", "cartpole_tracking_cost"]], "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost": [[12, 5, 1, "", "_com_length"], [12, 6, 1, "", "close"], [12, 4, 1, "", "constraint_pos"], [12, 6, 1, "", "cost"], [12, 5, 1, "", "dt"], [12, 6, 1, "", "get_params"], [12, 4, 1, "", "kinematics_integrator"], [12, 5, 1, "", "mass_cart"], [12, 5, 1, "", "mass_pole"], [12, 4, 1, "", "max_cost"], [12, 4, 1, "", "max_v"], [12, 4, 1, "", "max_w"], [12, 4, 1, "", "metadata"], [12, 5, 1, "", "physics_time"], [12, 5, 1, "", "pole_mass_length"], [12, 5, 1, "", "polemass_length"], [12, 6, 1, "", "reference"], [12, 6, 1, "", "render"], [12, 6, 1, "", "reset"], [12, 6, 1, "", "reset_params"], [12, 6, 1, "", "set_params"], [12, 4, 1, "", "state"], [12, 6, 1, "", "step"], [12, 4, 1, "", "t"], [12, 4, 1, "", "target_pos"], [12, 4, 1, "", "tau"], [12, 4, 1, "", "theta_threshold_radians"], [12, 5, 1, "", "total_mass"], [12, 4, 1, "", "x_threshold"]], "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost": [[11, 2, 1, "", "CartPoleTrackingCost"], [11, 1, 1, "", "EPISODES"], [11, 1, 1, "", "RANDOM_STEP"], [11, 1, 1, "", "env"]], "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost": [[11, 5, 1, "", "_com_length"], [11, 6, 1, "", "close"], [11, 4, 1, "", "constraint_pos"], [11, 6, 1, "", "cost"], [11, 5, 1, "", "dt"], [11, 6, 1, "", "get_params"], [11, 4, 1, "", "kinematics_integrator"], [11, 5, 1, "", "mass_cart"], [11, 5, 1, "", "mass_pole"], [11, 4, 1, "", "max_cost"], [11, 4, 1, "", "max_v"], [11, 4, 1, "", "max_w"], [11, 4, 1, "", "metadata"], [11, 5, 1, "", "physics_time"], [11, 5, 1, "", "pole_mass_length"], [11, 5, 1, "", "polemass_length"], [11, 6, 1, "", "reference"], [11, 6, 1, "", "render"], [11, 6, 1, "", "reset"], [11, 6, 1, "", "reset_params"], [11, 6, 1, "", "set_params"], [11, 4, 1, "", "state"], [11, 6, 1, "", "step"], [11, 4, 1, "", "t"], [11, 4, 1, "", "target_pos"], [11, 4, 1, "", "tau"], [11, 4, 1, "", "theta_threshold_radians"], [11, 5, 1, "", "total_mass"], [11, 4, 1, "", "x_threshold"]], "stable_gym.envs.classic_control.ex3_ekf": [[14, 2, 1, "", "Ex3EKF"], [13, 0, 0, "-", "ex3_ekf"]], "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF": [[14, 4, 1, "", "dt"], [14, 5, 1, "", "physics_time"], [14, 6, 1, "", "reference"], [14, 6, 1, "", "render"], [14, 6, 1, "", "reset"], [14, 4, 1, "", "sigma"], [14, 4, 1, "", "state"], [14, 6, 1, "", "step"], [14, 4, 1, "", "t"], [14, 5, 1, "", "tau"]], "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf": [[13, 1, 1, "", "EPISODES"], [13, 2, 1, "", "Ex3EKF"], [13, 1, 1, "", "RANDOM_STEP"], [13, 1, 1, "", "env"]], "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF": [[13, 4, 1, "", "dt"], [13, 5, 1, "", "physics_time"], [13, 6, 1, "", "reference"], [13, 6, 1, "", "render"], [13, 6, 1, "", "reset"], [13, 4, 1, "", "sigma"], [13, 4, 1, "", "state"], [13, 6, 1, "", "step"], [13, 4, 1, "", "t"], [13, 5, 1, "", "tau"]], "stable_gym.envs.mujoco": [[25, 2, 1, "", "AntCost"], [25, 2, 1, "", "HalfCheetahCost"], [25, 2, 1, "", "HopperCost"], [25, 2, 1, "", "HumanoidCost"], [25, 2, 1, "", "SwimmerCost"], [25, 2, 1, "", "Walker2dCost"], [18, 0, 0, "-", "ant_cost"], [20, 0, 0, "-", "half_cheetah_cost"], [22, 0, 0, "-", "hopper_cost"], [24, 0, 0, "-", "humanoid_cost"], [26, 0, 0, "-", "swimmer_cost"], [28, 0, 0, "-", "walker2d_cost"]], "stable_gym.envs.mujoco.AntCost": [[25, 6, 1, "", "cost"], [25, 4, 1, "", "dt"], [25, 5, 1, "", "physics_time"], [25, 4, 1, "", "reference_forward_velocity"], [25, 6, 1, "", "reset"], [25, 4, 1, "", "state"], [25, 6, 1, "", "step"], [25, 5, 1, "", "t"], [25, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.HalfCheetahCost": [[25, 6, 1, "", "cost"], [25, 4, 1, "", "dt"], [25, 5, 1, "", "physics_time"], [25, 4, 1, "", "reference_forward_velocity"], [25, 6, 1, "", "reset"], [25, 4, 1, "", "state"], [25, 6, 1, "", "step"], [25, 5, 1, "", "t"], [25, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.HopperCost": [[25, 6, 1, "", "cost"], [25, 4, 1, "", "dt"], [25, 5, 1, "", "physics_time"], [25, 4, 1, "", "reference_forward_velocity"], [25, 6, 1, "", "reset"], [25, 4, 1, "", "state"], [25, 6, 1, "", "step"], [25, 5, 1, "", "t"], [25, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.HumanoidCost": [[25, 6, 1, "", "cost"], [25, 4, 1, "", "dt"], [25, 5, 1, "", "physics_time"], [25, 4, 1, "", "reference_forward_velocity"], [25, 6, 1, "", "reset"], [25, 4, 1, "", "state"], [25, 6, 1, "", "step"], [25, 5, 1, "", "t"], [25, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.SwimmerCost": [[25, 6, 1, "", "cost"], [25, 4, 1, "", "dt"], [25, 5, 1, "", "physics_time"], [25, 4, 1, "", "reference_forward_velocity"], [25, 6, 1, "", "reset"], [25, 4, 1, "", "state"], [25, 6, 1, "", "step"], [25, 5, 1, "", "t"], [25, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.Walker2dCost": [[25, 6, 1, "", "cost"], [25, 4, 1, "", "dt"], [25, 5, 1, "", "physics_time"], [25, 4, 1, "", "reference_forward_velocity"], [25, 6, 1, "", "reset"], [25, 4, 1, "", "state"], [25, 6, 1, "", "step"], [25, 5, 1, "", "t"], [25, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.ant_cost": [[18, 2, 1, "", "AntCost"], [17, 0, 0, "-", "ant_cost"]], "stable_gym.envs.mujoco.ant_cost.AntCost": [[18, 6, 1, "", "cost"], [18, 4, 1, "", "dt"], [18, 5, 1, "", "physics_time"], [18, 4, 1, "", "reference_forward_velocity"], [18, 6, 1, "", "reset"], [18, 4, 1, "", "state"], [18, 6, 1, "", "step"], [18, 5, 1, "", "t"], [18, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.ant_cost.ant_cost": [[17, 2, 1, "", "AntCost"], [17, 1, 1, "", "EPISODES"], [17, 1, 1, "", "RANDOM_STEP"], [17, 1, 1, "", "env"]], "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost": [[17, 6, 1, "", "cost"], [17, 4, 1, "", "dt"], [17, 5, 1, "", "physics_time"], [17, 4, 1, "", "reference_forward_velocity"], [17, 6, 1, "", "reset"], [17, 4, 1, "", "state"], [17, 6, 1, "", "step"], [17, 5, 1, "", "t"], [17, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.half_cheetah_cost": [[20, 2, 1, "", "HalfCheetahCost"], [19, 0, 0, "-", "half_cheetah_cost"]], "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost": [[20, 6, 1, "", "cost"], [20, 4, 1, "", "dt"], [20, 5, 1, "", "physics_time"], [20, 4, 1, "", "reference_forward_velocity"], [20, 6, 1, "", "reset"], [20, 4, 1, "", "state"], [20, 6, 1, "", "step"], [20, 5, 1, "", "t"], [20, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost": [[19, 1, 1, "", "EPISODES"], [19, 2, 1, "", "HalfCheetahCost"], [19, 1, 1, "", "RANDOM_STEP"], [19, 1, 1, "", "env"]], "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost": [[19, 6, 1, "", "cost"], [19, 4, 1, "", "dt"], [19, 5, 1, "", "physics_time"], [19, 4, 1, "", "reference_forward_velocity"], [19, 6, 1, "", "reset"], [19, 4, 1, "", "state"], [19, 6, 1, "", "step"], [19, 5, 1, "", "t"], [19, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.hopper_cost": [[22, 2, 1, "", "HopperCost"], [21, 0, 0, "-", "hopper_cost"]], "stable_gym.envs.mujoco.hopper_cost.HopperCost": [[22, 6, 1, "", "cost"], [22, 4, 1, "", "dt"], [22, 5, 1, "", "physics_time"], [22, 4, 1, "", "reference_forward_velocity"], [22, 6, 1, "", "reset"], [22, 4, 1, "", "state"], [22, 6, 1, "", "step"], [22, 5, 1, "", "t"], [22, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.hopper_cost.hopper_cost": [[21, 1, 1, "", "EPISODES"], [21, 2, 1, "", "HopperCost"], [21, 1, 1, "", "RANDOM_STEP"], [21, 1, 1, "", "env"]], "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost": [[21, 6, 1, "", "cost"], [21, 4, 1, "", "dt"], [21, 5, 1, "", "physics_time"], [21, 4, 1, "", "reference_forward_velocity"], [21, 6, 1, "", "reset"], [21, 4, 1, "", "state"], [21, 6, 1, "", "step"], [21, 5, 1, "", "t"], [21, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.humanoid_cost": [[24, 2, 1, "", "HumanoidCost"], [23, 0, 0, "-", "humanoid_cost"]], "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost": [[24, 6, 1, "", "cost"], [24, 4, 1, "", "dt"], [24, 5, 1, "", "physics_time"], [24, 4, 1, "", "reference_forward_velocity"], [24, 6, 1, "", "reset"], [24, 4, 1, "", "state"], [24, 6, 1, "", "step"], [24, 5, 1, "", "t"], [24, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost": [[23, 1, 1, "", "EPISODES"], [23, 2, 1, "", "HumanoidCost"], [23, 1, 1, "", "RANDOM_STEP"], [23, 1, 1, "", "env"]], "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost": [[23, 6, 1, "", "cost"], [23, 4, 1, "", "dt"], [23, 5, 1, "", "physics_time"], [23, 4, 1, "", "reference_forward_velocity"], [23, 6, 1, "", "reset"], [23, 4, 1, "", "state"], [23, 6, 1, "", "step"], [23, 5, 1, "", "t"], [23, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.swimmer_cost": [[26, 2, 1, "", "SwimmerCost"], [27, 0, 0, "-", "swimmer_cost"]], "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost": [[26, 6, 1, "", "cost"], [26, 4, 1, "", "dt"], [26, 5, 1, "", "physics_time"], [26, 4, 1, "", "reference_forward_velocity"], [26, 6, 1, "", "reset"], [26, 4, 1, "", "state"], [26, 6, 1, "", "step"], [26, 5, 1, "", "t"], [26, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost": [[27, 1, 1, "", "EPISODES"], [27, 1, 1, "", "RANDOM_STEP"], [27, 2, 1, "", "SwimmerCost"], [27, 1, 1, "", "env"]], "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost": [[27, 6, 1, "", "cost"], [27, 4, 1, "", "dt"], [27, 5, 1, "", "physics_time"], [27, 4, 1, "", "reference_forward_velocity"], [27, 6, 1, "", "reset"], [27, 4, 1, "", "state"], [27, 6, 1, "", "step"], [27, 5, 1, "", "t"], [27, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.walker2d_cost": [[28, 2, 1, "", "Walker2dCost"], [29, 0, 0, "-", "walker2d_cost"]], "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost": [[28, 6, 1, "", "cost"], [28, 4, 1, "", "dt"], [28, 5, 1, "", "physics_time"], [28, 4, 1, "", "reference_forward_velocity"], [28, 6, 1, "", "reset"], [28, 4, 1, "", "state"], [28, 6, 1, "", "step"], [28, 5, 1, "", "t"], [28, 5, 1, "", "tau"]], "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost": [[29, 1, 1, "", "EPISODES"], [29, 1, 1, "", "RANDOM_STEP"], [29, 2, 1, "", "Walker2dCost"], [29, 1, 1, "", "env"]], "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost": [[29, 6, 1, "", "cost"], [29, 4, 1, "", "dt"], [29, 5, 1, "", "physics_time"], [29, 4, 1, "", "reference_forward_velocity"], [29, 6, 1, "", "reset"], [29, 4, 1, "", "state"], [29, 6, 1, "", "step"], [29, 5, 1, "", "t"], [29, 5, 1, "", "tau"]], "stable_gym.envs.robotics": [[33, 2, 1, "", "FetchReachCost"], [33, 2, 1, "", "MinitaurBulletCost"], [33, 2, 1, "", "QuadXHoverCost"], [33, 2, 1, "", "QuadXTrackingCost"], [33, 2, 1, "", "QuadXWaypointsCost"], [32, 0, 0, "-", "fetch"], [34, 0, 0, "-", "minitaur"], [37, 0, 0, "-", "quadrotor"]], "stable_gym.envs.robotics.FetchReachCost": [[33, 6, 1, "", "cost"], [33, 4, 1, "", "dt"], [33, 5, 1, "", "physics_time"], [33, 6, 1, "", "reset"], [33, 4, 1, "", "state"], [33, 6, 1, "", "step"], [33, 5, 1, "", "t"], [33, 5, 1, "", "tau"]], "stable_gym.envs.robotics.MinitaurBulletCost": [[33, 6, 1, "", "_termination"], [33, 5, 1, "", "base_velocity"], [33, 6, 1, "", "cost"], [33, 5, 1, "", "dt"], [33, 6, 1, "", "is_fallen"], [33, 4, 1, "", "metadata"], [33, 5, 1, "", "physics_time"], [33, 4, 1, "", "reference_forward_velocity"], [33, 6, 1, "", "reset"], [33, 4, 1, "", "state"], [33, 6, 1, "", "step"], [33, 4, 1, "", "t"], [33, 5, 1, "", "tau"], [33, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.QuadXHoverCost": [[33, 4, 1, "", "agent_hz"], [33, 6, 1, "", "cost"], [33, 5, 1, "", "dt"], [33, 4, 1, "", "initial_physics_time"], [33, 5, 1, "", "physics_time"], [33, 6, 1, "", "reset"], [33, 4, 1, "", "state"], [33, 6, 1, "", "step"], [33, 5, 1, "", "t"], [33, 5, 1, "", "tau"], [33, 5, 1, "", "time_limit"], [33, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.QuadXTrackingCost": [[33, 4, 1, "", "agent_hz"], [33, 6, 1, "", "cost"], [33, 5, 1, "", "dt"], [33, 4, 1, "", "initial_physics_time"], [33, 5, 1, "", "physics_time"], [33, 6, 1, "", "reference"], [33, 6, 1, "", "reset"], [33, 4, 1, "", "state"], [33, 6, 1, "", "step"], [33, 5, 1, "", "t"], [33, 5, 1, "", "tau"], [33, 5, 1, "", "time_limit"], [33, 5, 1, "", "time_limit_max_episode_steps"], [33, 6, 1, "", "visualize_reference"]], "stable_gym.envs.robotics.QuadXWaypointsCost": [[33, 4, 1, "", "agent_hz"], [33, 6, 1, "", "compute_target_deltas"], [33, 6, 1, "", "cost"], [33, 5, 1, "", "dt"], [33, 5, 1, "", "immediate_waypoint_target"], [33, 4, 1, "", "initial_physics_time"], [33, 5, 1, "", "physics_time"], [33, 6, 1, "", "reset"], [33, 4, 1, "", "state"], [33, 6, 1, "", "step"], [33, 5, 1, "", "t"], [33, 5, 1, "", "tau"], [33, 5, 1, "", "time_limit"], [33, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.fetch": [[32, 2, 1, "", "FetchReachCost"], [31, 0, 0, "-", "fetch_reach_cost"]], "stable_gym.envs.robotics.fetch.FetchReachCost": [[32, 6, 1, "", "cost"], [32, 4, 1, "", "dt"], [32, 5, 1, "", "physics_time"], [32, 6, 1, "", "reset"], [32, 4, 1, "", "state"], [32, 6, 1, "", "step"], [32, 5, 1, "", "t"], [32, 5, 1, "", "tau"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost": [[31, 2, 1, "", "FetchReachCost"], [30, 0, 0, "-", "fetch_reach_cost"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost": [[31, 6, 1, "", "cost"], [31, 4, 1, "", "dt"], [31, 5, 1, "", "physics_time"], [31, 6, 1, "", "reset"], [31, 4, 1, "", "state"], [31, 6, 1, "", "step"], [31, 5, 1, "", "t"], [31, 5, 1, "", "tau"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost": [[30, 1, 1, "", "EPISODES"], [30, 2, 1, "", "FetchReachCost"], [30, 1, 1, "", "RANDOM_STEP"], [30, 1, 1, "", "env"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost": [[30, 6, 1, "", "cost"], [30, 4, 1, "", "dt"], [30, 5, 1, "", "physics_time"], [30, 6, 1, "", "reset"], [30, 4, 1, "", "state"], [30, 6, 1, "", "step"], [30, 5, 1, "", "t"], [30, 5, 1, "", "tau"]], "stable_gym.envs.robotics.minitaur": [[34, 2, 1, "", "MinitaurBulletCost"], [35, 0, 0, "-", "minitaur_bullet_cost"]], "stable_gym.envs.robotics.minitaur.MinitaurBulletCost": [[34, 6, 1, "", "_termination"], [34, 5, 1, "", "base_velocity"], [34, 6, 1, "", "cost"], [34, 5, 1, "", "dt"], [34, 6, 1, "", "is_fallen"], [34, 4, 1, "", "metadata"], [34, 5, 1, "", "physics_time"], [34, 4, 1, "", "reference_forward_velocity"], [34, 6, 1, "", "reset"], [34, 4, 1, "", "state"], [34, 6, 1, "", "step"], [34, 4, 1, "", "t"], [34, 5, 1, "", "tau"], [34, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost": [[35, 2, 1, "", "MinitaurBulletCost"], [36, 0, 0, "-", "minitaur_bullet_cost"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost": [[35, 6, 1, "", "_termination"], [35, 5, 1, "", "base_velocity"], [35, 6, 1, "", "cost"], [35, 5, 1, "", "dt"], [35, 6, 1, "", "is_fallen"], [35, 4, 1, "", "metadata"], [35, 5, 1, "", "physics_time"], [35, 4, 1, "", "reference_forward_velocity"], [35, 6, 1, "", "reset"], [35, 4, 1, "", "state"], [35, 6, 1, "", "step"], [35, 4, 1, "", "t"], [35, 5, 1, "", "tau"], [35, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost": [[36, 1, 1, "", "EPISODES"], [36, 2, 1, "", "MinitaurBulletCost"], [36, 1, 1, "", "RANDOM_STEP"], [36, 1, 1, "", "env"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost": [[36, 6, 1, "", "_termination"], [36, 5, 1, "", "base_velocity"], [36, 6, 1, "", "cost"], [36, 5, 1, "", "dt"], [36, 6, 1, "", "is_fallen"], [36, 4, 1, "", "metadata"], [36, 5, 1, "", "physics_time"], [36, 4, 1, "", "reference_forward_velocity"], [36, 6, 1, "", "reset"], [36, 4, 1, "", "state"], [36, 6, 1, "", "step"], [36, 4, 1, "", "t"], [36, 5, 1, "", "tau"], [36, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.quadrotor": [[37, 2, 1, "", "QuadXHoverCost"], [37, 2, 1, "", "QuadXTrackingCost"], [37, 2, 1, "", "QuadXWaypointsCost"], [38, 0, 0, "-", "quadx_hover_cost"], [40, 0, 0, "-", "quadx_tracking_cost"], [42, 0, 0, "-", "quadx_waypoints_cost"]], "stable_gym.envs.robotics.quadrotor.QuadXHoverCost": [[37, 4, 1, "", "agent_hz"], [37, 6, 1, "", "cost"], [37, 5, 1, "", "dt"], [37, 4, 1, "", "initial_physics_time"], [37, 5, 1, "", "physics_time"], [37, 6, 1, "", "reset"], [37, 4, 1, "", "state"], [37, 6, 1, "", "step"], [37, 5, 1, "", "t"], [37, 5, 1, "", "tau"], [37, 5, 1, "", "time_limit"], [37, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost": [[37, 4, 1, "", "agent_hz"], [37, 6, 1, "", "cost"], [37, 5, 1, "", "dt"], [37, 4, 1, "", "initial_physics_time"], [37, 5, 1, "", "physics_time"], [37, 6, 1, "", "reference"], [37, 6, 1, "", "reset"], [37, 4, 1, "", "state"], [37, 6, 1, "", "step"], [37, 5, 1, "", "t"], [37, 5, 1, "", "tau"], [37, 5, 1, "", "time_limit"], [37, 5, 1, "", "time_limit_max_episode_steps"], [37, 6, 1, "", "visualize_reference"]], "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost": [[37, 4, 1, "", "agent_hz"], [37, 6, 1, "", "compute_target_deltas"], [37, 6, 1, "", "cost"], [37, 5, 1, "", "dt"], [37, 5, 1, "", "immediate_waypoint_target"], [37, 4, 1, "", "initial_physics_time"], [37, 5, 1, "", "physics_time"], [37, 6, 1, "", "reset"], [37, 4, 1, "", "state"], [37, 6, 1, "", "step"], [37, 5, 1, "", "t"], [37, 5, 1, "", "tau"], [37, 5, 1, "", "time_limit"], [37, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost": [[38, 2, 1, "", "QuadXHoverCost"], [39, 0, 0, "-", "quadx_hover_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost": [[38, 4, 1, "", "agent_hz"], [38, 6, 1, "", "cost"], [38, 5, 1, "", "dt"], [38, 4, 1, "", "initial_physics_time"], [38, 5, 1, "", "physics_time"], [38, 6, 1, "", "reset"], [38, 4, 1, "", "state"], [38, 6, 1, "", "step"], [38, 5, 1, "", "t"], [38, 5, 1, "", "tau"], [38, 5, 1, "", "time_limit"], [38, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost": [[39, 1, 1, "", "EPISODES"], [39, 2, 1, "", "QuadXHoverCost"], [39, 1, 1, "", "RANDOM_STEP"], [39, 1, 1, "", "env"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost": [[39, 4, 1, "", "agent_hz"], [39, 6, 1, "", "cost"], [39, 5, 1, "", "dt"], [39, 4, 1, "", "initial_physics_time"], [39, 5, 1, "", "physics_time"], [39, 6, 1, "", "reset"], [39, 4, 1, "", "state"], [39, 6, 1, "", "step"], [39, 5, 1, "", "t"], [39, 5, 1, "", "tau"], [39, 5, 1, "", "time_limit"], [39, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost": [[40, 2, 1, "", "QuadXTrackingCost"], [41, 0, 0, "-", "quadx_tracking_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost": [[40, 4, 1, "", "agent_hz"], [40, 6, 1, "", "cost"], [40, 5, 1, "", "dt"], [40, 4, 1, "", "initial_physics_time"], [40, 5, 1, "", "physics_time"], [40, 6, 1, "", "reference"], [40, 6, 1, "", "reset"], [40, 4, 1, "", "state"], [40, 6, 1, "", "step"], [40, 5, 1, "", "t"], [40, 5, 1, "", "tau"], [40, 5, 1, "", "time_limit"], [40, 5, 1, "", "time_limit_max_episode_steps"], [40, 6, 1, "", "visualize_reference"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost": [[41, 1, 1, "", "EPISODES"], [41, 2, 1, "", "QuadXTrackingCost"], [41, 1, 1, "", "RANDOM_STEP"], [41, 1, 1, "", "env"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost": [[41, 4, 1, "", "agent_hz"], [41, 6, 1, "", "cost"], [41, 5, 1, "", "dt"], [41, 4, 1, "", "initial_physics_time"], [41, 5, 1, "", "physics_time"], [41, 6, 1, "", "reference"], [41, 6, 1, "", "reset"], [41, 4, 1, "", "state"], [41, 6, 1, "", "step"], [41, 5, 1, "", "t"], [41, 5, 1, "", "tau"], [41, 5, 1, "", "time_limit"], [41, 5, 1, "", "time_limit_max_episode_steps"], [41, 6, 1, "", "visualize_reference"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost": [[42, 2, 1, "", "QuadXWaypointsCost"], [43, 0, 0, "-", "quadx_waypoints_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost": [[42, 4, 1, "", "agent_hz"], [42, 6, 1, "", "compute_target_deltas"], [42, 6, 1, "", "cost"], [42, 5, 1, "", "dt"], [42, 5, 1, "", "immediate_waypoint_target"], [42, 4, 1, "", "initial_physics_time"], [42, 5, 1, "", "physics_time"], [42, 6, 1, "", "reset"], [42, 4, 1, "", "state"], [42, 6, 1, "", "step"], [42, 5, 1, "", "t"], [42, 5, 1, "", "tau"], [42, 5, 1, "", "time_limit"], [42, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost": [[43, 1, 1, "", "EPISODES"], [43, 2, 1, "", "QuadXWaypointsCost"], [43, 1, 1, "", "RANDOM_STEP"], [43, 1, 1, "", "env"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost": [[43, 4, 1, "", "agent_hz"], [43, 6, 1, "", "compute_target_deltas"], [43, 6, 1, "", "cost"], [43, 5, 1, "", "dt"], [43, 5, 1, "", "immediate_waypoint_target"], [43, 4, 1, "", "initial_physics_time"], [43, 5, 1, "", "physics_time"], [43, 6, 1, "", "reset"], [43, 4, 1, "", "state"], [43, 6, 1, "", "step"], [43, 5, 1, "", "t"], [43, 5, 1, "", "tau"], [43, 5, 1, "", "time_limit"], [43, 5, 1, "", "time_limit_max_episode_steps"]], "stable_gym.version": [[45, 1, 1, "", "__version__"], [45, 1, 1, "", "__version_tuple__"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "method", "Python method"]}, "titleterms": {"api": [0, 69], "refer": 0, "stable_gym": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 67], "common": [1, 2, 3], "submodul": [1, 5, 7, 10, 12, 14, 18, 20, 22, 24, 26, 28, 31, 35, 38, 40, 42, 44], "packag": [1, 4, 5, 7, 10, 12, 14, 15, 18, 20, 22, 24, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 40, 42, 44], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 69], "class": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "max_episode_steps_injection_wrapp": 2, "modul": [2, 3, 6, 8, 9, 11, 13, 17, 19, 21, 23, 27, 29, 30, 36, 39, 41, 43, 45], "function": [2, 3, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "util": 3, "env": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "biolog": [4, 5, 6, 7, 8, 55], "subpackag": [4, 15, 16, 25, 32, 33, 34, 37, 44], "oscil": [5, 6, 50, 51], "attribut": [6, 8, 9, 11, 13, 17, 19, 21, 23, 27, 29, 30, 36, 39, 41, 43, 44], "oscillator_compl": [7, 8], "classic_control": [9, 10, 11, 12, 13, 14, 15], "cartpole_cost": [9, 10], "cartpole_tracking_cost": [11, 12], "ex3_ekf": [13, 14], "dynam": 14, "mujoco": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 55], "ant_cost": [17, 18], "half_cheetah_cost": [19, 20], "hopper_cost": [21, 22], "humanoid_cost": [23, 24], "swimmer_cost": [26, 27], "walker2d_cost": [28, 29], "robot": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55], "fetch": [30, 31, 32], "fetch_reach_cost": [30, 31], "minitaur": [34, 35, 36], "minitaur_bullet_cost": [35, 36], "quadrotor": [37, 38, 39, 40, 41, 42, 43], "quadx_hover_cost": [38, 39], "quadx_tracking_cost": [40, 41], "quadx_waypoints_cost": [42, 43], "version": 45, "add": 46, "new": 46, "environ": [46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "__init__": 46, "py": 46, "contribut": 47, "stabl": [47, 69], "gym": [47, 69], "tabl": [47, 48, 69], "guidelin": 47, "we": 47, "develop": [47, 69], "github": 47, "us": [47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "flow": 47, "so": 47, "all": 47, "code": 47, "chang": 47, "happen": 47, "through": 47, "pull": 47, "request": 47, "report": 47, "bug": 47, "": [47, 69], "issu": 47, "write": 47, "detail": 47, "background": 47, "sampl": 47, "descript": 47, "commit": 47, "messag": 47, "consist": 47, "style": 47, "python": [47, 67], "markdown": 47, "action": [47, 50, 51, 52, 53, 54, 63], "pre": [47, 67], "hook": 47, "releas": 47, "document": [47, 48, 69], "ani": 47, "you": 47, "make": 47, "under": 47, "mit": 47, "softwar": 47, "licens": [47, 49], "build": 48, "instal": [48, 67], "requir": 48, "deploi": 48, "gymnasium": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "observ": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66], "space": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66], "episod": [50, 51, 52, 53, 54, 63], "termin": [50, 51, 52, 53, 54, 63], "goal": [50, 51, 52, 53, 54, 63], "cost": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "step": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "return": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "how": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "complic": 51, "cartpolecost": 52, "cartpoletrackingcost": 53, "ex3ekf": 54, "classic": 55, "control": 55, "antcost": 56, "halfcheetahcost": 57, "hoppercost": 58, "humanoidcost": 59, "swimmercost": 60, "walker2dcost": 61, "fetchreachcost": 62, "minitaurbulletcost": 63, "quadxhovercost": 64, "quadxtrackingcost": 65, "quadxwaypointscost": 66, "requisit": 67, "welcom": 69, "usag": 69, "indic": 69}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "stable_gym.common": [[1, "module-stable_gym.common"]], "Submodules": [[1, "submodules"], [5, "submodules"], [7, "submodules"], [10, "submodules"], [12, "submodules"], [14, "submodules"], [18, "submodules"], [20, "submodules"], [22, "submodules"], [24, "submodules"], [26, "submodules"], [28, "submodules"], [31, "submodules"], [35, "submodules"], [38, "submodules"], [40, "submodules"], [42, "submodules"], [44, "submodules"]], "Package Contents": [[1, "package-contents"], [4, "package-contents"], [5, "package-contents"], [7, "package-contents"], [10, "package-contents"], [12, "package-contents"], [14, "package-contents"], [15, "package-contents"], [18, "package-contents"], [20, "package-contents"], [22, "package-contents"], [24, "package-contents"], [25, "package-contents"], [26, "package-contents"], [28, "package-contents"], [31, "package-contents"], [32, "package-contents"], [33, "package-contents"], [34, "package-contents"], [35, "package-contents"], [37, "package-contents"], [38, "package-contents"], [40, "package-contents"], [42, "package-contents"], [44, "package-contents"]], "Classes": [[1, "classes"], [2, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"]], "stable_gym.common.max_episode_steps_injection_wrapper": [[2, "module-stable_gym.common.max_episode_steps_injection_wrapper"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [17, "module-contents"], [19, "module-contents"], [21, "module-contents"], [23, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [36, "module-contents"], [39, "module-contents"], [41, "module-contents"], [43, "module-contents"], [45, "module-contents"]], "Functions": [[2, "functions"], [3, "functions"]], "stable_gym.common.utils": [[3, "module-stable_gym.common.utils"]], "stable_gym.envs.biological": [[4, "module-stable_gym.envs.biological"]], "Subpackages": [[4, "subpackages"], [15, "subpackages"], [16, "subpackages"], [25, "subpackages"], [32, "subpackages"], [33, "subpackages"], [34, "subpackages"], [37, "subpackages"], [44, "subpackages"]], "stable_gym.envs.biological.oscillator": [[5, "module-stable_gym.envs.biological.oscillator"]], "stable_gym.envs.biological.oscillator.oscillator": [[6, "module-stable_gym.envs.biological.oscillator.oscillator"]], "Attributes": [[6, "attributes"], [8, "attributes"], [9, "attributes"], [11, "attributes"], [13, "attributes"], [17, "attributes"], [19, "attributes"], [21, "attributes"], [23, "attributes"], [27, "attributes"], [29, "attributes"], [30, "attributes"], [36, "attributes"], [39, "attributes"], [41, "attributes"], [43, "attributes"], [44, "attributes"]], "stable_gym.envs.biological.oscillator_complicated": [[7, "module-stable_gym.envs.biological.oscillator_complicated"]], "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated": [[8, "module-stable_gym.envs.biological.oscillator_complicated.oscillator_complicated"]], "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost": [[9, "module-stable_gym.envs.classic_control.cartpole_cost.cartpole_cost"]], "stable_gym.envs.classic_control.cartpole_cost": [[10, "module-stable_gym.envs.classic_control.cartpole_cost"]], "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost": [[11, "module-stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost"]], "stable_gym.envs.classic_control.cartpole_tracking_cost": [[12, "module-stable_gym.envs.classic_control.cartpole_tracking_cost"]], "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf": [[13, "module-stable_gym.envs.classic_control.ex3_ekf.ex3_ekf"]], "stable_gym.envs.classic_control.ex3_ekf": [[14, "module-stable_gym.envs.classic_control.ex3_ekf"]], "Dynamics": [[14, "dynamics"]], "stable_gym.envs.classic_control": [[15, "module-stable_gym.envs.classic_control"]], "stable_gym.envs": [[16, "module-stable_gym.envs"]], "stable_gym.envs.mujoco.ant_cost.ant_cost": [[17, "module-stable_gym.envs.mujoco.ant_cost.ant_cost"]], "stable_gym.envs.mujoco.ant_cost": [[18, "module-stable_gym.envs.mujoco.ant_cost"]], "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost": [[19, "module-stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost"]], "stable_gym.envs.mujoco.half_cheetah_cost": [[20, "module-stable_gym.envs.mujoco.half_cheetah_cost"]], "stable_gym.envs.mujoco.hopper_cost.hopper_cost": [[21, "module-stable_gym.envs.mujoco.hopper_cost.hopper_cost"]], "stable_gym.envs.mujoco.hopper_cost": [[22, "module-stable_gym.envs.mujoco.hopper_cost"]], "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost": [[23, "module-stable_gym.envs.mujoco.humanoid_cost.humanoid_cost"]], "stable_gym.envs.mujoco.humanoid_cost": [[24, "module-stable_gym.envs.mujoco.humanoid_cost"]], "stable_gym.envs.mujoco": [[25, "module-stable_gym.envs.mujoco"]], "stable_gym.envs.mujoco.swimmer_cost": [[26, "module-stable_gym.envs.mujoco.swimmer_cost"]], "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost": [[27, "module-stable_gym.envs.mujoco.swimmer_cost.swimmer_cost"]], "stable_gym.envs.mujoco.walker2d_cost": [[28, "module-stable_gym.envs.mujoco.walker2d_cost"]], "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost": [[29, "module-stable_gym.envs.mujoco.walker2d_cost.walker2d_cost"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost": [[30, "module-stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost": [[31, "module-stable_gym.envs.robotics.fetch.fetch_reach_cost"]], "stable_gym.envs.robotics.fetch": [[32, "module-stable_gym.envs.robotics.fetch"]], "stable_gym.envs.robotics": [[33, "module-stable_gym.envs.robotics"]], "stable_gym.envs.robotics.minitaur": [[34, "module-stable_gym.envs.robotics.minitaur"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost": [[35, "module-stable_gym.envs.robotics.minitaur.minitaur_bullet_cost"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost": [[36, "module-stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost"]], "stable_gym.envs.robotics.quadrotor": [[37, "module-stable_gym.envs.robotics.quadrotor"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost": [[38, "module-stable_gym.envs.robotics.quadrotor.quadx_hover_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost": [[39, "module-stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost": [[40, "module-stable_gym.envs.robotics.quadrotor.quadx_tracking_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost": [[41, "module-stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost": [[42, "module-stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost": [[43, "module-stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost"]], "stable_gym": [[44, "module-stable_gym"]], "stable_gym.version": [[45, "module-stable_gym.version"]], "Add new environments": [[46, "add-new-environments"]], "stable_gym/stable_gym/envs/__init__.py": [[46, "stable-gym-stable-gym-envs-init-py"]], "Contribute to stable-gym": [[47, "contribute-to-stable-gym"]], "Table of Contents": [[47, "table-of-contents"], [48, "table-of-contents"]], "Contribution guidelines": [[47, "contribution-guidelines"]], "We Develop with Github": [[47, "we-develop-with-github"]], "We Use Github Flow, So All Code Changes Happen Through Pull Requests": [[47, "we-use-github-flow-so-all-code-changes-happen-through-pull-requests"]], "Report bugs using Github\u2019s issues": [[47, "report-bugs-using-github-s-issues"]], "Write bug reports with detail, background, and sample code": [[47, "write-bug-reports-with-detail-background-and-sample-code"]], "Write descriptive commit messages": [[47, "write-descriptive-commit-messages"]], "Use a Consistent coding Style": [[47, "use-a-consistent-coding-style"]], "Python guidelines": [[47, "python-guidelines"]], "Markdown guidelines": [[47, "markdown-guidelines"]], "GitHub actions": [[47, "github-actions"]], "Pre-commit hooks": [[47, "pre-commit-hooks"]], "Release guidelines": [[47, "release-guidelines"]], "Documentation guidelines": [[47, "documentation-guidelines"]], "Any contributions you make will be under the MIT Software License": [[47, "any-contributions-you-make-will-be-under-the-mit-software-license"]], "Build the documentation": [[48, "build-the-documentation"], [48, "id1"]], "Install requirements": [[48, "install-requirements"]], "Deploying": [[48, "deploying"]], "License": [[49, "license"]], "Oscillator gymnasium environment": [[50, "oscillator-gymnasium-environment"]], "Observation space": [[50, "observation-space"], [51, "observation-space"], [52, "observation-space"], [53, "observation-space"], [54, "observation-space"], [56, "observation-space"], [57, "observation-space"], [58, "observation-space"], [59, "observation-space"], [60, "observation-space"], [61, "observation-space"], [63, "observation-space"], [65, "observation-space"], [66, "observation-space"]], "Action space": [[50, "action-space"], [51, "action-space"], [52, "action-space"], [53, "action-space"], [54, "action-space"], [63, "action-space"]], "Episode Termination": [[50, "episode-termination"], [51, "episode-termination"], [52, "episode-termination"], [53, "episode-termination"], [63, "episode-termination"]], "Environment goal": [[50, "environment-goal"], [51, "environment-goal"], [54, "environment-goal"], [63, "environment-goal"]], "Cost function": [[50, "cost-function"], [51, "cost-function"], [52, "cost-function"], [53, "cost-function"], [54, "cost-function"], [56, "cost-function"], [57, "cost-function"], [58, "cost-function"], [59, "cost-function"], [60, "cost-function"], [61, "cost-function"], [62, "cost-function"], [63, "cost-function"], [64, "cost-function"], [65, "cost-function"], [66, "cost-function"]], "Environment step return": [[50, "environment-step-return"], [51, "environment-step-return"], [52, "environment-step-return"], [53, "environment-step-return"], [54, "environment-step-return"], [56, "environment-step-return"], [57, "environment-step-return"], [58, "environment-step-return"], [59, "environment-step-return"], [60, "environment-step-return"], [61, "environment-step-return"], [62, "environment-step-return"], [63, "environment-step-return"], [64, "environment-step-return"], [65, "environment-step-return"], [66, "environment-step-return"]], "How to use": [[50, "how-to-use"], [51, "how-to-use"], [52, "how-to-use"], [53, "how-to-use"], [54, "how-to-use"], [56, "how-to-use"], [57, "how-to-use"], [58, "how-to-use"], [59, "how-to-use"], [60, "how-to-use"], [61, "how-to-use"], [62, "how-to-use"], [63, "how-to-use"], [64, "how-to-use"], [65, "how-to-use"], [66, "how-to-use"], [68, "how-to-use"]], "Oscillator Complicated gymnasium environment": [[51, "oscillator-complicated-gymnasium-environment"]], "CartPoleCost gymnasium environment": [[52, "cartpolecost-gymnasium-environment"]], "Environment goals": [[52, "environment-goals"], [53, "environment-goals"]], "CartPoleTrackingCost gymnasium environment": [[53, "cartpoletrackingcost-gymnasium-environment"]], "Ex3EKF gymnasium environment": [[54, "ex3ekf-gymnasium-environment"]], "Episode termination": [[54, "episode-termination"]], "Environments": [[55, "environments"]], "Biological environments": [[55, "biological-environments"]], "Classic control environments": [[55, "classic-control-environments"]], "Mujoco environments": [[55, "mujoco-environments"]], "Robotics environment": [[55, "robotics-environment"]], "AntCost gymnasium environment": [[56, "antcost-gymnasium-environment"]], "HalfCheetahCost gymnasium environment": [[57, "halfcheetahcost-gymnasium-environment"]], "HopperCost gymnasium environment": [[58, "hoppercost-gymnasium-environment"]], "HumanoidCost gymnasium environment": [[59, "humanoidcost-gymnasium-environment"]], "SwimmerCost gymnasium environment": [[60, "swimmercost-gymnasium-environment"]], "Walker2dCost gymnasium environment": [[61, "walker2dcost-gymnasium-environment"]], "FetchReachCost gymnasium environment": [[62, "fetchreachcost-gymnasium-environment"]], "MinitaurBulletCost gymnasium environment": [[63, "minitaurbulletcost-gymnasium-environment"]], "QuadXHoverCost gymnasium environment": [[64, "quadxhovercost-gymnasium-environment"]], "QuadXTrackingCost gymnasium environment": [[65, "quadxtrackingcost-gymnasium-environment"]], "QuadXWaypointsCost gymnasium environment": [[66, "quadxwaypointscost-gymnasium-environment"]], "Installation": [[67, "installation"]], "Pre-requisites": [[67, "pre-requisites"]], "Installing Python": [[67, "installing-python"]], "Installing stable_gym": [[67, "installing-stable-gym"]], "Welcome to Stable Gym\u2019s documentation": [[69, "welcome-to-stable-gym-s-documentation"]], "Contents": [[69, "contents"]], "Usage": [[69, null]], "Development": [[69, null]], "API Documentation": [[69, null]], "Indices and tables": [[69, "indices-and-tables"]]}, "indexentries": {"maxepisodestepsinjectionwrapper (class in stable_gym.common)": [[1, "stable_gym.common.MaxEpisodeStepsInjectionWrapper"]], "module": [[1, "module-stable_gym.common"], [2, "module-stable_gym.common.max_episode_steps_injection_wrapper"], [3, "module-stable_gym.common.utils"], [4, "module-stable_gym.envs.biological"], [5, "module-stable_gym.envs.biological.oscillator"], [6, "module-stable_gym.envs.biological.oscillator.oscillator"], [7, "module-stable_gym.envs.biological.oscillator_complicated"], [8, "module-stable_gym.envs.biological.oscillator_complicated.oscillator_complicated"], [9, "module-stable_gym.envs.classic_control.cartpole_cost.cartpole_cost"], [10, "module-stable_gym.envs.classic_control.cartpole_cost"], [11, "module-stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost"], [12, "module-stable_gym.envs.classic_control.cartpole_tracking_cost"], [13, "module-stable_gym.envs.classic_control.ex3_ekf.ex3_ekf"], [14, "module-stable_gym.envs.classic_control.ex3_ekf"], [15, "module-stable_gym.envs.classic_control"], [16, "module-stable_gym.envs"], [17, "module-stable_gym.envs.mujoco.ant_cost.ant_cost"], [18, "module-stable_gym.envs.mujoco.ant_cost"], [19, "module-stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost"], [20, "module-stable_gym.envs.mujoco.half_cheetah_cost"], [21, "module-stable_gym.envs.mujoco.hopper_cost.hopper_cost"], [22, "module-stable_gym.envs.mujoco.hopper_cost"], [23, "module-stable_gym.envs.mujoco.humanoid_cost.humanoid_cost"], [24, "module-stable_gym.envs.mujoco.humanoid_cost"], [25, "module-stable_gym.envs.mujoco"], [26, "module-stable_gym.envs.mujoco.swimmer_cost"], [27, "module-stable_gym.envs.mujoco.swimmer_cost.swimmer_cost"], [28, "module-stable_gym.envs.mujoco.walker2d_cost"], [29, "module-stable_gym.envs.mujoco.walker2d_cost.walker2d_cost"], [30, "module-stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost"], [31, "module-stable_gym.envs.robotics.fetch.fetch_reach_cost"], [32, "module-stable_gym.envs.robotics.fetch"], [33, "module-stable_gym.envs.robotics"], [34, "module-stable_gym.envs.robotics.minitaur"], [35, "module-stable_gym.envs.robotics.minitaur.minitaur_bullet_cost"], [36, "module-stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost"], [37, "module-stable_gym.envs.robotics.quadrotor"], [38, "module-stable_gym.envs.robotics.quadrotor.quadx_hover_cost"], [39, "module-stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost"], [40, "module-stable_gym.envs.robotics.quadrotor.quadx_tracking_cost"], [41, "module-stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost"], [42, "module-stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost"], [43, "module-stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost"], [44, "module-stable_gym"], [45, "module-stable_gym.version"]], "stable_gym.common": [[1, "module-stable_gym.common"]], "maxepisodestepsinjectionwrapper (class in stable_gym.common.max_episode_steps_injection_wrapper)": [[2, "stable_gym.common.max_episode_steps_injection_wrapper.MaxEpisodeStepsInjectionWrapper"]], "get_time_limit_wrapper_max_episode_steps() (in module stable_gym.common.max_episode_steps_injection_wrapper)": [[2, "stable_gym.common.max_episode_steps_injection_wrapper.get_time_limit_wrapper_max_episode_steps"]], "inject_attribute_into_base_env() (in module stable_gym.common.max_episode_steps_injection_wrapper)": [[2, "stable_gym.common.max_episode_steps_injection_wrapper.inject_attribute_into_base_env"]], "stable_gym.common.max_episode_steps_injection_wrapper": [[2, "module-stable_gym.common.max_episode_steps_injection_wrapper"]], "abbreviate() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.abbreviate"]], "change_dict_key() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.change_dict_key"]], "change_precision() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.change_precision"]], "colorize() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.colorize"]], "convert_gym_box_to_gymnasium_box() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.convert_gym_box_to_gymnasium_box"]], "friendly_list() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.friendly_list"]], "get_flattened_keys() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.get_flattened_keys"]], "get_flattened_values() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.get_flattened_values"]], "get_lowest_next_int() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.get_lowest_next_int"]], "inject_value() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.inject_value"]], "maybe_parse_reset_bounds() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.maybe_parse_reset_bounds"]], "stable_gym.common.utils": [[3, "module-stable_gym.common.utils"]], "strip_underscores() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.strip_underscores"]], "verify_number_and_cast() (in module stable_gym.common.utils)": [[3, "stable_gym.common.utils.verify_number_and_cast"]], "oscillator (class in stable_gym.envs.biological)": [[4, "stable_gym.envs.biological.Oscillator"]], "oscillatorcomplicated (class in stable_gym.envs.biological)": [[4, "stable_gym.envs.biological.OscillatorComplicated"]], "dt (stable_gym.envs.biological.oscillator attribute)": [[4, "stable_gym.envs.biological.Oscillator.dt"]], "dt (stable_gym.envs.biological.oscillatorcomplicated attribute)": [[4, "stable_gym.envs.biological.OscillatorComplicated.dt"]], "max_cost (stable_gym.envs.biological.oscillator attribute)": [[4, "stable_gym.envs.biological.Oscillator.max_cost"]], "max_cost (stable_gym.envs.biological.oscillatorcomplicated attribute)": [[4, "stable_gym.envs.biological.OscillatorComplicated.max_cost"]], "physics_time (stable_gym.envs.biological.oscillator property)": [[4, "stable_gym.envs.biological.Oscillator.physics_time"]], "physics_time (stable_gym.envs.biological.oscillatorcomplicated property)": [[4, "stable_gym.envs.biological.OscillatorComplicated.physics_time"]], "reference() (stable_gym.envs.biological.oscillator method)": [[4, "stable_gym.envs.biological.Oscillator.reference"]], "reference() (stable_gym.envs.biological.oscillatorcomplicated method)": [[4, "stable_gym.envs.biological.OscillatorComplicated.reference"]], "render() (stable_gym.envs.biological.oscillator method)": [[4, "stable_gym.envs.biological.Oscillator.render"]], "render() (stable_gym.envs.biological.oscillatorcomplicated method)": [[4, "stable_gym.envs.biological.OscillatorComplicated.render"]], "reset() (stable_gym.envs.biological.oscillator method)": [[4, "stable_gym.envs.biological.Oscillator.reset"]], "reset() (stable_gym.envs.biological.oscillatorcomplicated method)": [[4, "stable_gym.envs.biological.OscillatorComplicated.reset"]], "sigma (stable_gym.envs.biological.oscillator attribute)": [[4, "stable_gym.envs.biological.Oscillator.sigma"]], "sigma (stable_gym.envs.biological.oscillatorcomplicated attribute)": [[4, "stable_gym.envs.biological.OscillatorComplicated.sigma"]], "stable_gym.envs.biological": [[4, "module-stable_gym.envs.biological"]], "state (stable_gym.envs.biological.oscillator attribute)": [[4, "stable_gym.envs.biological.Oscillator.state"]], "state (stable_gym.envs.biological.oscillatorcomplicated attribute)": [[4, "stable_gym.envs.biological.OscillatorComplicated.state"]], "step() (stable_gym.envs.biological.oscillator method)": [[4, "stable_gym.envs.biological.Oscillator.step"]], "step() (stable_gym.envs.biological.oscillatorcomplicated method)": [[4, "stable_gym.envs.biological.OscillatorComplicated.step"]], "t (stable_gym.envs.biological.oscillator attribute)": [[4, "stable_gym.envs.biological.Oscillator.t"]], "t (stable_gym.envs.biological.oscillatorcomplicated attribute)": [[4, "stable_gym.envs.biological.OscillatorComplicated.t"]], "tau (stable_gym.envs.biological.oscillator property)": [[4, "stable_gym.envs.biological.Oscillator.tau"]], "tau (stable_gym.envs.biological.oscillatorcomplicated property)": [[4, "stable_gym.envs.biological.OscillatorComplicated.tau"]], "oscillator (class in stable_gym.envs.biological.oscillator)": [[5, "stable_gym.envs.biological.oscillator.Oscillator"]], "dt (stable_gym.envs.biological.oscillator.oscillator attribute)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.dt"]], "max_cost (stable_gym.envs.biological.oscillator.oscillator attribute)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.max_cost"]], "physics_time (stable_gym.envs.biological.oscillator.oscillator property)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.physics_time"]], "reference() (stable_gym.envs.biological.oscillator.oscillator method)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.reference"]], "render() (stable_gym.envs.biological.oscillator.oscillator method)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.render"]], "reset() (stable_gym.envs.biological.oscillator.oscillator method)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.reset"]], "sigma (stable_gym.envs.biological.oscillator.oscillator attribute)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.sigma"]], "stable_gym.envs.biological.oscillator": [[5, "module-stable_gym.envs.biological.oscillator"]], "state (stable_gym.envs.biological.oscillator.oscillator attribute)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.state"]], "step() (stable_gym.envs.biological.oscillator.oscillator method)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.step"]], "t (stable_gym.envs.biological.oscillator.oscillator attribute)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.t"]], "tau (stable_gym.envs.biological.oscillator.oscillator property)": [[5, "stable_gym.envs.biological.oscillator.Oscillator.tau"]], "episodes (in module stable_gym.envs.biological.oscillator.oscillator)": [[6, "stable_gym.envs.biological.oscillator.oscillator.EPISODES"]], "oscillator (class in stable_gym.envs.biological.oscillator.oscillator)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator"]], "random_step (in module stable_gym.envs.biological.oscillator.oscillator)": [[6, "stable_gym.envs.biological.oscillator.oscillator.RANDOM_STEP"]], "dt (stable_gym.envs.biological.oscillator.oscillator.oscillator attribute)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.dt"]], "env (in module stable_gym.envs.biological.oscillator.oscillator)": [[6, "stable_gym.envs.biological.oscillator.oscillator.env"]], "max_cost (stable_gym.envs.biological.oscillator.oscillator.oscillator attribute)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.max_cost"]], "physics_time (stable_gym.envs.biological.oscillator.oscillator.oscillator property)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.physics_time"]], "reference() (stable_gym.envs.biological.oscillator.oscillator.oscillator method)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.reference"]], "render() (stable_gym.envs.biological.oscillator.oscillator.oscillator method)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.render"]], "reset() (stable_gym.envs.biological.oscillator.oscillator.oscillator method)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.reset"]], "sigma (stable_gym.envs.biological.oscillator.oscillator.oscillator attribute)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.sigma"]], "stable_gym.envs.biological.oscillator.oscillator": [[6, "module-stable_gym.envs.biological.oscillator.oscillator"]], "state (stable_gym.envs.biological.oscillator.oscillator.oscillator attribute)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.state"]], "step() (stable_gym.envs.biological.oscillator.oscillator.oscillator method)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.step"]], "t (stable_gym.envs.biological.oscillator.oscillator.oscillator attribute)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.t"]], "tau (stable_gym.envs.biological.oscillator.oscillator.oscillator property)": [[6, "stable_gym.envs.biological.oscillator.oscillator.Oscillator.tau"]], "oscillatorcomplicated (class in stable_gym.envs.biological.oscillator_complicated)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated"]], "dt (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated attribute)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.dt"]], "max_cost (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated attribute)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.max_cost"]], "physics_time (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated property)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.physics_time"]], "reference() (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated method)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.reference"]], "render() (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated method)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.render"]], "reset() (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated method)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.reset"]], "sigma (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated attribute)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.sigma"]], "stable_gym.envs.biological.oscillator_complicated": [[7, "module-stable_gym.envs.biological.oscillator_complicated"]], "state (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated attribute)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.state"]], "step() (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated method)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.step"]], "t (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated attribute)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.t"]], "tau (stable_gym.envs.biological.oscillator_complicated.oscillatorcomplicated property)": [[7, "stable_gym.envs.biological.oscillator_complicated.OscillatorComplicated.tau"]], "episodes (in module stable_gym.envs.biological.oscillator_complicated.oscillator_complicated)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.EPISODES"]], "oscillatorcomplicated (class in stable_gym.envs.biological.oscillator_complicated.oscillator_complicated)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated"]], "random_step (in module stable_gym.envs.biological.oscillator_complicated.oscillator_complicated)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.RANDOM_STEP"]], "dt (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated attribute)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.dt"]], "env (in module stable_gym.envs.biological.oscillator_complicated.oscillator_complicated)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.env"]], "max_cost (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated attribute)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.max_cost"]], "physics_time (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated property)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.physics_time"]], "reference() (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated method)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.reference"]], "render() (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated method)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.render"]], "reset() (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated method)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.reset"]], "sigma (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated attribute)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.sigma"]], "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated": [[8, "module-stable_gym.envs.biological.oscillator_complicated.oscillator_complicated"]], "state (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated attribute)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.state"]], "step() (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated method)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.step"]], "t (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated attribute)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.t"]], "tau (stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.oscillatorcomplicated property)": [[8, "stable_gym.envs.biological.oscillator_complicated.oscillator_complicated.OscillatorComplicated.tau"]], "cartpolecost (class in stable_gym.envs.classic_control.cartpole_cost.cartpole_cost)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost"]], "episodes (in module stable_gym.envs.classic_control.cartpole_cost.cartpole_cost)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.EPISODES"]], "random_step (in module stable_gym.envs.classic_control.cartpole_cost.cartpole_cost)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.RANDOM_STEP"]], "_com_length (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost._com_length"]], "close() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.close"]], "constraint_pos (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.constraint_pos"]], "cost() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.cost"]], "dt (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.dt"]], "env (in module stable_gym.envs.classic_control.cartpole_cost.cartpole_cost)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.env"]], "get_params() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.get_params"]], "kinematics_integrator (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.kinematics_integrator"]], "mass_cart (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.mass_cart"]], "mass_pole (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.mass_pole"]], "max_cost (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.max_cost"]], "max_v (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.max_v"]], "max_w (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.max_w"]], "metadata (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.metadata"]], "physics_time (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.physics_time"]], "pole_mass_length (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.pole_mass_length"]], "polemass_length (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.polemass_length"]], "render() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.render"]], "reset() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.reset"]], "reset_params() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.reset_params"]], "set_params() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.set_params"]], "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost": [[9, "module-stable_gym.envs.classic_control.cartpole_cost.cartpole_cost"]], "state (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.state"]], "step() (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost method)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.step"]], "t (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.t"]], "target_pos (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.target_pos"]], "tau (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.tau"]], "theta_threshold_radians (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.theta_threshold_radians"]], "total_mass (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost property)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.total_mass"]], "x_threshold (stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.cartpolecost attribute)": [[9, "stable_gym.envs.classic_control.cartpole_cost.cartpole_cost.CartPoleCost.x_threshold"]], "cartpolecost (class in stable_gym.envs.classic_control.cartpole_cost)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost"]], "_com_length (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost._com_length"]], "close() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.close"]], "constraint_pos (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.constraint_pos"]], "cost() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.cost"]], "dt (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.dt"]], "get_params() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.get_params"]], "kinematics_integrator (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.kinematics_integrator"]], "mass_cart (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.mass_cart"]], "mass_pole (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.mass_pole"]], "max_cost (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.max_cost"]], "max_v (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.max_v"]], "max_w (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.max_w"]], "metadata (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.metadata"]], "physics_time (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.physics_time"]], "pole_mass_length (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.pole_mass_length"]], "polemass_length (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.polemass_length"]], "render() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.render"]], "reset() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.reset"]], "reset_params() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.reset_params"]], "set_params() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.set_params"]], "stable_gym.envs.classic_control.cartpole_cost": [[10, "module-stable_gym.envs.classic_control.cartpole_cost"]], "state (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.state"]], "step() (stable_gym.envs.classic_control.cartpole_cost.cartpolecost method)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.step"]], "t (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.t"]], "target_pos (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.target_pos"]], "tau (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.tau"]], "theta_threshold_radians (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.theta_threshold_radians"]], "total_mass (stable_gym.envs.classic_control.cartpole_cost.cartpolecost property)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.total_mass"]], "x_threshold (stable_gym.envs.classic_control.cartpole_cost.cartpolecost attribute)": [[10, "stable_gym.envs.classic_control.cartpole_cost.CartPoleCost.x_threshold"]], "cartpoletrackingcost (class in stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost"]], "episodes (in module stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.EPISODES"]], "random_step (in module stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.RANDOM_STEP"]], "_com_length (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost._com_length"]], "close() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.close"]], "constraint_pos (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.constraint_pos"]], "cost() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.cost"]], "dt (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.dt"]], "env (in module stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.env"]], "get_params() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.get_params"]], "kinematics_integrator (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.kinematics_integrator"]], "mass_cart (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.mass_cart"]], "mass_pole (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.mass_pole"]], "max_cost (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.max_cost"]], "max_v (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.max_v"]], "max_w (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.max_w"]], "metadata (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.metadata"]], "physics_time (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.physics_time"]], "pole_mass_length (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.pole_mass_length"]], "polemass_length (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.polemass_length"]], "reference() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.reference"]], "render() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.render"]], "reset() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.reset"]], "reset_params() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.reset_params"]], "set_params() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.set_params"]], "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost": [[11, "module-stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost"]], "state (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.state"]], "step() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost method)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.step"]], "t (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.t"]], "target_pos (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.target_pos"]], "tau (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.tau"]], "theta_threshold_radians (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.theta_threshold_radians"]], "total_mass (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost property)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.total_mass"]], "x_threshold (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[11, "stable_gym.envs.classic_control.cartpole_tracking_cost.cartpole_tracking_cost.CartPoleTrackingCost.x_threshold"]], "cartpoletrackingcost (class in stable_gym.envs.classic_control.cartpole_tracking_cost)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost"]], "_com_length (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost._com_length"]], "close() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.close"]], "constraint_pos (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.constraint_pos"]], "cost() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.cost"]], "dt (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.dt"]], "get_params() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.get_params"]], "kinematics_integrator (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.kinematics_integrator"]], "mass_cart (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.mass_cart"]], "mass_pole (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.mass_pole"]], "max_cost (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.max_cost"]], "max_v (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.max_v"]], "max_w (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.max_w"]], "metadata (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.metadata"]], "physics_time (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.physics_time"]], "pole_mass_length (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.pole_mass_length"]], "polemass_length (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.polemass_length"]], "reference() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.reference"]], "render() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.render"]], "reset() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.reset"]], "reset_params() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.reset_params"]], "set_params() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.set_params"]], "stable_gym.envs.classic_control.cartpole_tracking_cost": [[12, "module-stable_gym.envs.classic_control.cartpole_tracking_cost"]], "state (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.state"]], "step() (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost method)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.step"]], "t (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.t"]], "target_pos (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.target_pos"]], "tau (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.tau"]], "theta_threshold_radians (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.theta_threshold_radians"]], "total_mass (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost property)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.total_mass"]], "x_threshold (stable_gym.envs.classic_control.cartpole_tracking_cost.cartpoletrackingcost attribute)": [[12, "stable_gym.envs.classic_control.cartpole_tracking_cost.CartPoleTrackingCost.x_threshold"]], "episodes (in module stable_gym.envs.classic_control.ex3_ekf.ex3_ekf)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.EPISODES"]], "ex3ekf (class in stable_gym.envs.classic_control.ex3_ekf.ex3_ekf)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF"]], "random_step (in module stable_gym.envs.classic_control.ex3_ekf.ex3_ekf)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.RANDOM_STEP"]], "dt (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf attribute)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.dt"]], "env (in module stable_gym.envs.classic_control.ex3_ekf.ex3_ekf)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.env"]], "physics_time (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf property)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.physics_time"]], "reference() (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf method)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.reference"]], "render() (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf method)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.render"]], "reset() (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf method)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.reset"]], "sigma (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf attribute)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.sigma"]], "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf": [[13, "module-stable_gym.envs.classic_control.ex3_ekf.ex3_ekf"]], "state (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf attribute)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.state"]], "step() (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf method)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.step"]], "t (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf attribute)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.t"]], "tau (stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.ex3ekf property)": [[13, "stable_gym.envs.classic_control.ex3_ekf.ex3_ekf.Ex3EKF.tau"]], "ex3ekf (class in stable_gym.envs.classic_control.ex3_ekf)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF"]], "dt (stable_gym.envs.classic_control.ex3_ekf.ex3ekf attribute)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.dt"]], "physics_time (stable_gym.envs.classic_control.ex3_ekf.ex3ekf property)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.physics_time"]], "reference() (stable_gym.envs.classic_control.ex3_ekf.ex3ekf method)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.reference"]], "render() (stable_gym.envs.classic_control.ex3_ekf.ex3ekf method)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.render"]], "reset() (stable_gym.envs.classic_control.ex3_ekf.ex3ekf method)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.reset"]], "sigma (stable_gym.envs.classic_control.ex3_ekf.ex3ekf attribute)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.sigma"]], "stable_gym.envs.classic_control.ex3_ekf": [[14, "module-stable_gym.envs.classic_control.ex3_ekf"]], "state (stable_gym.envs.classic_control.ex3_ekf.ex3ekf attribute)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.state"]], "step() (stable_gym.envs.classic_control.ex3_ekf.ex3ekf method)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.step"]], "t (stable_gym.envs.classic_control.ex3_ekf.ex3ekf attribute)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.t"]], "tau (stable_gym.envs.classic_control.ex3_ekf.ex3ekf property)": [[14, "stable_gym.envs.classic_control.ex3_ekf.Ex3EKF.tau"]], "cartpolecost (class in stable_gym.envs.classic_control)": [[15, "stable_gym.envs.classic_control.CartPoleCost"]], "cartpoletrackingcost (class in stable_gym.envs.classic_control)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost"]], "ex3ekf (class in stable_gym.envs.classic_control)": [[15, "stable_gym.envs.classic_control.Ex3EKF"]], "_com_length (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost._com_length"]], "_com_length (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost._com_length"]], "close() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.close"]], "close() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.close"]], "constraint_pos (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.constraint_pos"]], "constraint_pos (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.constraint_pos"]], "cost() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.cost"]], "cost() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.cost"]], "dt (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost.dt"]], "dt (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.dt"]], "dt (stable_gym.envs.classic_control.ex3ekf attribute)": [[15, "stable_gym.envs.classic_control.Ex3EKF.dt"]], "get_params() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.get_params"]], "get_params() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.get_params"]], "kinematics_integrator (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.kinematics_integrator"]], "kinematics_integrator (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.kinematics_integrator"]], "mass_cart (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost.mass_cart"]], "mass_cart (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.mass_cart"]], "mass_pole (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost.mass_pole"]], "mass_pole (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.mass_pole"]], "max_cost (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.max_cost"]], "max_cost (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.max_cost"]], "max_v (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.max_v"]], "max_v (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.max_v"]], "max_w (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.max_w"]], "max_w (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.max_w"]], "metadata (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.metadata"]], "metadata (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.metadata"]], "physics_time (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost.physics_time"]], "physics_time (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.physics_time"]], "physics_time (stable_gym.envs.classic_control.ex3ekf property)": [[15, "stable_gym.envs.classic_control.Ex3EKF.physics_time"]], "pole_mass_length (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost.pole_mass_length"]], "pole_mass_length (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.pole_mass_length"]], "polemass_length (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost.polemass_length"]], "polemass_length (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.polemass_length"]], "reference() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.reference"]], "reference() (stable_gym.envs.classic_control.ex3ekf method)": [[15, "stable_gym.envs.classic_control.Ex3EKF.reference"]], "render() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.render"]], "render() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.render"]], "render() (stable_gym.envs.classic_control.ex3ekf method)": [[15, "stable_gym.envs.classic_control.Ex3EKF.render"]], "reset() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.reset"]], "reset() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.reset"]], "reset() (stable_gym.envs.classic_control.ex3ekf method)": [[15, "stable_gym.envs.classic_control.Ex3EKF.reset"]], "reset_params() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.reset_params"]], "reset_params() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.reset_params"]], "set_params() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.set_params"]], "set_params() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.set_params"]], "sigma (stable_gym.envs.classic_control.ex3ekf attribute)": [[15, "stable_gym.envs.classic_control.Ex3EKF.sigma"]], "stable_gym.envs.classic_control": [[15, "module-stable_gym.envs.classic_control"]], "state (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.state"]], "state (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.state"]], "state (stable_gym.envs.classic_control.ex3ekf attribute)": [[15, "stable_gym.envs.classic_control.Ex3EKF.state"]], "step() (stable_gym.envs.classic_control.cartpolecost method)": [[15, "stable_gym.envs.classic_control.CartPoleCost.step"]], "step() (stable_gym.envs.classic_control.cartpoletrackingcost method)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.step"]], "step() (stable_gym.envs.classic_control.ex3ekf method)": [[15, "stable_gym.envs.classic_control.Ex3EKF.step"]], "t (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.t"]], "t (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.t"]], "t (stable_gym.envs.classic_control.ex3ekf attribute)": [[15, "stable_gym.envs.classic_control.Ex3EKF.t"]], "target_pos (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.target_pos"]], "target_pos (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.target_pos"]], "tau (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.tau"]], "tau (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.tau"]], "tau (stable_gym.envs.classic_control.ex3ekf property)": [[15, "stable_gym.envs.classic_control.Ex3EKF.tau"]], "theta_threshold_radians (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.theta_threshold_radians"]], "theta_threshold_radians (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.theta_threshold_radians"]], "total_mass (stable_gym.envs.classic_control.cartpolecost property)": [[15, "stable_gym.envs.classic_control.CartPoleCost.total_mass"]], "total_mass (stable_gym.envs.classic_control.cartpoletrackingcost property)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.total_mass"]], "x_threshold (stable_gym.envs.classic_control.cartpolecost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleCost.x_threshold"]], "x_threshold (stable_gym.envs.classic_control.cartpoletrackingcost attribute)": [[15, "stable_gym.envs.classic_control.CartPoleTrackingCost.x_threshold"]], "stable_gym.envs": [[16, "module-stable_gym.envs"]], "antcost (class in stable_gym.envs.mujoco.ant_cost.ant_cost)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost"]], "episodes (in module stable_gym.envs.mujoco.ant_cost.ant_cost)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.EPISODES"]], "random_step (in module stable_gym.envs.mujoco.ant_cost.ant_cost)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.RANDOM_STEP"]], "cost() (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost method)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.cost"]], "dt (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost attribute)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.dt"]], "env (in module stable_gym.envs.mujoco.ant_cost.ant_cost)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.env"]], "physics_time (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost property)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost attribute)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost method)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.reset"]], "stable_gym.envs.mujoco.ant_cost.ant_cost": [[17, "module-stable_gym.envs.mujoco.ant_cost.ant_cost"]], "state (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost attribute)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.state"]], "step() (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost method)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.step"]], "t (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost property)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.t"]], "tau (stable_gym.envs.mujoco.ant_cost.ant_cost.antcost property)": [[17, "stable_gym.envs.mujoco.ant_cost.ant_cost.AntCost.tau"]], "antcost (class in stable_gym.envs.mujoco.ant_cost)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost"]], "cost() (stable_gym.envs.mujoco.ant_cost.antcost method)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.cost"]], "dt (stable_gym.envs.mujoco.ant_cost.antcost attribute)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.dt"]], "physics_time (stable_gym.envs.mujoco.ant_cost.antcost property)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.ant_cost.antcost attribute)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.ant_cost.antcost method)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.reset"]], "stable_gym.envs.mujoco.ant_cost": [[18, "module-stable_gym.envs.mujoco.ant_cost"]], "state (stable_gym.envs.mujoco.ant_cost.antcost attribute)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.state"]], "step() (stable_gym.envs.mujoco.ant_cost.antcost method)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.step"]], "t (stable_gym.envs.mujoco.ant_cost.antcost property)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.t"]], "tau (stable_gym.envs.mujoco.ant_cost.antcost property)": [[18, "stable_gym.envs.mujoco.ant_cost.AntCost.tau"]], "episodes (in module stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.EPISODES"]], "halfcheetahcost (class in stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost"]], "random_step (in module stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.RANDOM_STEP"]], "cost() (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost method)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.cost"]], "dt (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost attribute)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.dt"]], "env (in module stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.env"]], "physics_time (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost property)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost attribute)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost method)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.reset"]], "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost": [[19, "module-stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost"]], "state (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost attribute)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.state"]], "step() (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost method)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.step"]], "t (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost property)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.t"]], "tau (stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.halfcheetahcost property)": [[19, "stable_gym.envs.mujoco.half_cheetah_cost.half_cheetah_cost.HalfCheetahCost.tau"]], "halfcheetahcost (class in stable_gym.envs.mujoco.half_cheetah_cost)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost"]], "cost() (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost method)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.cost"]], "dt (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost attribute)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.dt"]], "physics_time (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost property)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost attribute)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost method)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.reset"]], "stable_gym.envs.mujoco.half_cheetah_cost": [[20, "module-stable_gym.envs.mujoco.half_cheetah_cost"]], "state (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost attribute)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.state"]], "step() (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost method)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.step"]], "t (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost property)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.t"]], "tau (stable_gym.envs.mujoco.half_cheetah_cost.halfcheetahcost property)": [[20, "stable_gym.envs.mujoco.half_cheetah_cost.HalfCheetahCost.tau"]], "episodes (in module stable_gym.envs.mujoco.hopper_cost.hopper_cost)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.EPISODES"]], "hoppercost (class in stable_gym.envs.mujoco.hopper_cost.hopper_cost)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost"]], "random_step (in module stable_gym.envs.mujoco.hopper_cost.hopper_cost)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.RANDOM_STEP"]], "cost() (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost method)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.cost"]], "dt (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost attribute)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.dt"]], "env (in module stable_gym.envs.mujoco.hopper_cost.hopper_cost)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.env"]], "physics_time (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost property)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost attribute)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost method)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.reset"]], "stable_gym.envs.mujoco.hopper_cost.hopper_cost": [[21, "module-stable_gym.envs.mujoco.hopper_cost.hopper_cost"]], "state (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost attribute)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.state"]], "step() (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost method)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.step"]], "t (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost property)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.t"]], "tau (stable_gym.envs.mujoco.hopper_cost.hopper_cost.hoppercost property)": [[21, "stable_gym.envs.mujoco.hopper_cost.hopper_cost.HopperCost.tau"]], "hoppercost (class in stable_gym.envs.mujoco.hopper_cost)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost"]], "cost() (stable_gym.envs.mujoco.hopper_cost.hoppercost method)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.cost"]], "dt (stable_gym.envs.mujoco.hopper_cost.hoppercost attribute)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.dt"]], "physics_time (stable_gym.envs.mujoco.hopper_cost.hoppercost property)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.hopper_cost.hoppercost attribute)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.hopper_cost.hoppercost method)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.reset"]], "stable_gym.envs.mujoco.hopper_cost": [[22, "module-stable_gym.envs.mujoco.hopper_cost"]], "state (stable_gym.envs.mujoco.hopper_cost.hoppercost attribute)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.state"]], "step() (stable_gym.envs.mujoco.hopper_cost.hoppercost method)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.step"]], "t (stable_gym.envs.mujoco.hopper_cost.hoppercost property)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.t"]], "tau (stable_gym.envs.mujoco.hopper_cost.hoppercost property)": [[22, "stable_gym.envs.mujoco.hopper_cost.HopperCost.tau"]], "episodes (in module stable_gym.envs.mujoco.humanoid_cost.humanoid_cost)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.EPISODES"]], "humanoidcost (class in stable_gym.envs.mujoco.humanoid_cost.humanoid_cost)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost"]], "random_step (in module stable_gym.envs.mujoco.humanoid_cost.humanoid_cost)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.RANDOM_STEP"]], "cost() (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost method)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.cost"]], "dt (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost attribute)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.dt"]], "env (in module stable_gym.envs.mujoco.humanoid_cost.humanoid_cost)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.env"]], "physics_time (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost property)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost attribute)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost method)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.reset"]], "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost": [[23, "module-stable_gym.envs.mujoco.humanoid_cost.humanoid_cost"]], "state (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost attribute)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.state"]], "step() (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost method)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.step"]], "t (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost property)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.t"]], "tau (stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.humanoidcost property)": [[23, "stable_gym.envs.mujoco.humanoid_cost.humanoid_cost.HumanoidCost.tau"]], "humanoidcost (class in stable_gym.envs.mujoco.humanoid_cost)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost"]], "cost() (stable_gym.envs.mujoco.humanoid_cost.humanoidcost method)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.cost"]], "dt (stable_gym.envs.mujoco.humanoid_cost.humanoidcost attribute)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.dt"]], "physics_time (stable_gym.envs.mujoco.humanoid_cost.humanoidcost property)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.humanoid_cost.humanoidcost attribute)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.humanoid_cost.humanoidcost method)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.reset"]], "stable_gym.envs.mujoco.humanoid_cost": [[24, "module-stable_gym.envs.mujoco.humanoid_cost"]], "state (stable_gym.envs.mujoco.humanoid_cost.humanoidcost attribute)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.state"]], "step() (stable_gym.envs.mujoco.humanoid_cost.humanoidcost method)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.step"]], "t (stable_gym.envs.mujoco.humanoid_cost.humanoidcost property)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.t"]], "tau (stable_gym.envs.mujoco.humanoid_cost.humanoidcost property)": [[24, "stable_gym.envs.mujoco.humanoid_cost.HumanoidCost.tau"]], "antcost (class in stable_gym.envs.mujoco)": [[25, "stable_gym.envs.mujoco.AntCost"]], "halfcheetahcost (class in stable_gym.envs.mujoco)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost"]], "hoppercost (class in stable_gym.envs.mujoco)": [[25, "stable_gym.envs.mujoco.HopperCost"]], "humanoidcost (class in stable_gym.envs.mujoco)": [[25, "stable_gym.envs.mujoco.HumanoidCost"]], "swimmercost (class in stable_gym.envs.mujoco)": [[25, "stable_gym.envs.mujoco.SwimmerCost"]], "walker2dcost (class in stable_gym.envs.mujoco)": [[25, "stable_gym.envs.mujoco.Walker2dCost"]], "cost() (stable_gym.envs.mujoco.antcost method)": [[25, "stable_gym.envs.mujoco.AntCost.cost"]], "cost() (stable_gym.envs.mujoco.halfcheetahcost method)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.cost"]], "cost() (stable_gym.envs.mujoco.hoppercost method)": [[25, "stable_gym.envs.mujoco.HopperCost.cost"]], "cost() (stable_gym.envs.mujoco.humanoidcost method)": [[25, "stable_gym.envs.mujoco.HumanoidCost.cost"]], "cost() (stable_gym.envs.mujoco.swimmercost method)": [[25, "stable_gym.envs.mujoco.SwimmerCost.cost"]], "cost() (stable_gym.envs.mujoco.walker2dcost method)": [[25, "stable_gym.envs.mujoco.Walker2dCost.cost"]], "dt (stable_gym.envs.mujoco.antcost attribute)": [[25, "stable_gym.envs.mujoco.AntCost.dt"]], "dt (stable_gym.envs.mujoco.halfcheetahcost attribute)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.dt"]], "dt (stable_gym.envs.mujoco.hoppercost attribute)": [[25, "stable_gym.envs.mujoco.HopperCost.dt"]], "dt (stable_gym.envs.mujoco.humanoidcost attribute)": [[25, "stable_gym.envs.mujoco.HumanoidCost.dt"]], "dt (stable_gym.envs.mujoco.swimmercost attribute)": [[25, "stable_gym.envs.mujoco.SwimmerCost.dt"]], "dt (stable_gym.envs.mujoco.walker2dcost attribute)": [[25, "stable_gym.envs.mujoco.Walker2dCost.dt"]], "physics_time (stable_gym.envs.mujoco.antcost property)": [[25, "stable_gym.envs.mujoco.AntCost.physics_time"]], "physics_time (stable_gym.envs.mujoco.halfcheetahcost property)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.physics_time"]], "physics_time (stable_gym.envs.mujoco.hoppercost property)": [[25, "stable_gym.envs.mujoco.HopperCost.physics_time"]], "physics_time (stable_gym.envs.mujoco.humanoidcost property)": [[25, "stable_gym.envs.mujoco.HumanoidCost.physics_time"]], "physics_time (stable_gym.envs.mujoco.swimmercost property)": [[25, "stable_gym.envs.mujoco.SwimmerCost.physics_time"]], "physics_time (stable_gym.envs.mujoco.walker2dcost property)": [[25, "stable_gym.envs.mujoco.Walker2dCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.antcost attribute)": [[25, "stable_gym.envs.mujoco.AntCost.reference_forward_velocity"]], "reference_forward_velocity (stable_gym.envs.mujoco.halfcheetahcost attribute)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.reference_forward_velocity"]], "reference_forward_velocity (stable_gym.envs.mujoco.hoppercost attribute)": [[25, "stable_gym.envs.mujoco.HopperCost.reference_forward_velocity"]], "reference_forward_velocity (stable_gym.envs.mujoco.humanoidcost attribute)": [[25, "stable_gym.envs.mujoco.HumanoidCost.reference_forward_velocity"]], "reference_forward_velocity (stable_gym.envs.mujoco.swimmercost attribute)": [[25, "stable_gym.envs.mujoco.SwimmerCost.reference_forward_velocity"]], "reference_forward_velocity (stable_gym.envs.mujoco.walker2dcost attribute)": [[25, "stable_gym.envs.mujoco.Walker2dCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.antcost method)": [[25, "stable_gym.envs.mujoco.AntCost.reset"]], "reset() (stable_gym.envs.mujoco.halfcheetahcost method)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.reset"]], "reset() (stable_gym.envs.mujoco.hoppercost method)": [[25, "stable_gym.envs.mujoco.HopperCost.reset"]], "reset() (stable_gym.envs.mujoco.humanoidcost method)": [[25, "stable_gym.envs.mujoco.HumanoidCost.reset"]], "reset() (stable_gym.envs.mujoco.swimmercost method)": [[25, "stable_gym.envs.mujoco.SwimmerCost.reset"]], "reset() (stable_gym.envs.mujoco.walker2dcost method)": [[25, "stable_gym.envs.mujoco.Walker2dCost.reset"]], "stable_gym.envs.mujoco": [[25, "module-stable_gym.envs.mujoco"]], "state (stable_gym.envs.mujoco.antcost attribute)": [[25, "stable_gym.envs.mujoco.AntCost.state"]], "state (stable_gym.envs.mujoco.halfcheetahcost attribute)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.state"]], "state (stable_gym.envs.mujoco.hoppercost attribute)": [[25, "stable_gym.envs.mujoco.HopperCost.state"]], "state (stable_gym.envs.mujoco.humanoidcost attribute)": [[25, "stable_gym.envs.mujoco.HumanoidCost.state"]], "state (stable_gym.envs.mujoco.swimmercost attribute)": [[25, "stable_gym.envs.mujoco.SwimmerCost.state"]], "state (stable_gym.envs.mujoco.walker2dcost attribute)": [[25, "stable_gym.envs.mujoco.Walker2dCost.state"]], "step() (stable_gym.envs.mujoco.antcost method)": [[25, "stable_gym.envs.mujoco.AntCost.step"]], "step() (stable_gym.envs.mujoco.halfcheetahcost method)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.step"]], "step() (stable_gym.envs.mujoco.hoppercost method)": [[25, "stable_gym.envs.mujoco.HopperCost.step"]], "step() (stable_gym.envs.mujoco.humanoidcost method)": [[25, "stable_gym.envs.mujoco.HumanoidCost.step"]], "step() (stable_gym.envs.mujoco.swimmercost method)": [[25, "stable_gym.envs.mujoco.SwimmerCost.step"]], "step() (stable_gym.envs.mujoco.walker2dcost method)": [[25, "stable_gym.envs.mujoco.Walker2dCost.step"]], "t (stable_gym.envs.mujoco.antcost property)": [[25, "stable_gym.envs.mujoco.AntCost.t"]], "t (stable_gym.envs.mujoco.halfcheetahcost property)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.t"]], "t (stable_gym.envs.mujoco.hoppercost property)": [[25, "stable_gym.envs.mujoco.HopperCost.t"]], "t (stable_gym.envs.mujoco.humanoidcost property)": [[25, "stable_gym.envs.mujoco.HumanoidCost.t"]], "t (stable_gym.envs.mujoco.swimmercost property)": [[25, "stable_gym.envs.mujoco.SwimmerCost.t"]], "t (stable_gym.envs.mujoco.walker2dcost property)": [[25, "stable_gym.envs.mujoco.Walker2dCost.t"]], "tau (stable_gym.envs.mujoco.antcost property)": [[25, "stable_gym.envs.mujoco.AntCost.tau"]], "tau (stable_gym.envs.mujoco.halfcheetahcost property)": [[25, "stable_gym.envs.mujoco.HalfCheetahCost.tau"]], "tau (stable_gym.envs.mujoco.hoppercost property)": [[25, "stable_gym.envs.mujoco.HopperCost.tau"]], "tau (stable_gym.envs.mujoco.humanoidcost property)": [[25, "stable_gym.envs.mujoco.HumanoidCost.tau"]], "tau (stable_gym.envs.mujoco.swimmercost property)": [[25, "stable_gym.envs.mujoco.SwimmerCost.tau"]], "tau (stable_gym.envs.mujoco.walker2dcost property)": [[25, "stable_gym.envs.mujoco.Walker2dCost.tau"]], "swimmercost (class in stable_gym.envs.mujoco.swimmer_cost)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost"]], "cost() (stable_gym.envs.mujoco.swimmer_cost.swimmercost method)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.cost"]], "dt (stable_gym.envs.mujoco.swimmer_cost.swimmercost attribute)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.dt"]], "physics_time (stable_gym.envs.mujoco.swimmer_cost.swimmercost property)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.swimmer_cost.swimmercost attribute)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.swimmer_cost.swimmercost method)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.reset"]], "stable_gym.envs.mujoco.swimmer_cost": [[26, "module-stable_gym.envs.mujoco.swimmer_cost"]], "state (stable_gym.envs.mujoco.swimmer_cost.swimmercost attribute)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.state"]], "step() (stable_gym.envs.mujoco.swimmer_cost.swimmercost method)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.step"]], "t (stable_gym.envs.mujoco.swimmer_cost.swimmercost property)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.t"]], "tau (stable_gym.envs.mujoco.swimmer_cost.swimmercost property)": [[26, "stable_gym.envs.mujoco.swimmer_cost.SwimmerCost.tau"]], "episodes (in module stable_gym.envs.mujoco.swimmer_cost.swimmer_cost)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.EPISODES"]], "random_step (in module stable_gym.envs.mujoco.swimmer_cost.swimmer_cost)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.RANDOM_STEP"]], "swimmercost (class in stable_gym.envs.mujoco.swimmer_cost.swimmer_cost)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost"]], "cost() (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost method)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.cost"]], "dt (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost attribute)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.dt"]], "env (in module stable_gym.envs.mujoco.swimmer_cost.swimmer_cost)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.env"]], "physics_time (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost property)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost attribute)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost method)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.reset"]], "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost": [[27, "module-stable_gym.envs.mujoco.swimmer_cost.swimmer_cost"]], "state (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost attribute)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.state"]], "step() (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost method)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.step"]], "t (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost property)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.t"]], "tau (stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.swimmercost property)": [[27, "stable_gym.envs.mujoco.swimmer_cost.swimmer_cost.SwimmerCost.tau"]], "walker2dcost (class in stable_gym.envs.mujoco.walker2d_cost)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost"]], "cost() (stable_gym.envs.mujoco.walker2d_cost.walker2dcost method)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.cost"]], "dt (stable_gym.envs.mujoco.walker2d_cost.walker2dcost attribute)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.dt"]], "physics_time (stable_gym.envs.mujoco.walker2d_cost.walker2dcost property)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.walker2d_cost.walker2dcost attribute)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.walker2d_cost.walker2dcost method)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.reset"]], "stable_gym.envs.mujoco.walker2d_cost": [[28, "module-stable_gym.envs.mujoco.walker2d_cost"]], "state (stable_gym.envs.mujoco.walker2d_cost.walker2dcost attribute)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.state"]], "step() (stable_gym.envs.mujoco.walker2d_cost.walker2dcost method)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.step"]], "t (stable_gym.envs.mujoco.walker2d_cost.walker2dcost property)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.t"]], "tau (stable_gym.envs.mujoco.walker2d_cost.walker2dcost property)": [[28, "stable_gym.envs.mujoco.walker2d_cost.Walker2dCost.tau"]], "episodes (in module stable_gym.envs.mujoco.walker2d_cost.walker2d_cost)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.EPISODES"]], "random_step (in module stable_gym.envs.mujoco.walker2d_cost.walker2d_cost)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.RANDOM_STEP"]], "walker2dcost (class in stable_gym.envs.mujoco.walker2d_cost.walker2d_cost)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost"]], "cost() (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost method)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.cost"]], "dt (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost attribute)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.dt"]], "env (in module stable_gym.envs.mujoco.walker2d_cost.walker2d_cost)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.env"]], "physics_time (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost property)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost attribute)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.reference_forward_velocity"]], "reset() (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost method)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.reset"]], "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost": [[29, "module-stable_gym.envs.mujoco.walker2d_cost.walker2d_cost"]], "state (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost attribute)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.state"]], "step() (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost method)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.step"]], "t (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost property)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.t"]], "tau (stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.walker2dcost property)": [[29, "stable_gym.envs.mujoco.walker2d_cost.walker2d_cost.Walker2dCost.tau"]], "episodes (in module stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.EPISODES"]], "fetchreachcost (class in stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost"]], "random_step (in module stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.RANDOM_STEP"]], "cost() (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost method)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.cost"]], "dt (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost attribute)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.dt"]], "env (in module stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.env"]], "physics_time (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost property)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.physics_time"]], "reset() (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost method)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.reset"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost": [[30, "module-stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost"]], "state (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost attribute)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.state"]], "step() (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost method)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.step"]], "t (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost property)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.t"]], "tau (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.fetchreachcost property)": [[30, "stable_gym.envs.robotics.fetch.fetch_reach_cost.fetch_reach_cost.FetchReachCost.tau"]], "fetchreachcost (class in stable_gym.envs.robotics.fetch.fetch_reach_cost)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost"]], "cost() (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost method)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.cost"]], "dt (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost attribute)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.dt"]], "physics_time (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost property)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.physics_time"]], "reset() (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost method)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.reset"]], "stable_gym.envs.robotics.fetch.fetch_reach_cost": [[31, "module-stable_gym.envs.robotics.fetch.fetch_reach_cost"]], "state (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost attribute)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.state"]], "step() (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost method)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.step"]], "t (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost property)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.t"]], "tau (stable_gym.envs.robotics.fetch.fetch_reach_cost.fetchreachcost property)": [[31, "stable_gym.envs.robotics.fetch.fetch_reach_cost.FetchReachCost.tau"]], "fetchreachcost (class in stable_gym.envs.robotics.fetch)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost"]], "cost() (stable_gym.envs.robotics.fetch.fetchreachcost method)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.cost"]], "dt (stable_gym.envs.robotics.fetch.fetchreachcost attribute)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.dt"]], "physics_time (stable_gym.envs.robotics.fetch.fetchreachcost property)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.physics_time"]], "reset() (stable_gym.envs.robotics.fetch.fetchreachcost method)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.reset"]], "stable_gym.envs.robotics.fetch": [[32, "module-stable_gym.envs.robotics.fetch"]], "state (stable_gym.envs.robotics.fetch.fetchreachcost attribute)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.state"]], "step() (stable_gym.envs.robotics.fetch.fetchreachcost method)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.step"]], "t (stable_gym.envs.robotics.fetch.fetchreachcost property)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.t"]], "tau (stable_gym.envs.robotics.fetch.fetchreachcost property)": [[32, "stable_gym.envs.robotics.fetch.FetchReachCost.tau"]], "fetchreachcost (class in stable_gym.envs.robotics)": [[33, "stable_gym.envs.robotics.FetchReachCost"]], "minitaurbulletcost (class in stable_gym.envs.robotics)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost"]], "quadxhovercost (class in stable_gym.envs.robotics)": [[33, "stable_gym.envs.robotics.QuadXHoverCost"]], "quadxtrackingcost (class in stable_gym.envs.robotics)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost"]], "quadxwaypointscost (class in stable_gym.envs.robotics)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost"]], "_termination() (stable_gym.envs.robotics.minitaurbulletcost method)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost._termination"]], "agent_hz (stable_gym.envs.robotics.quadxhovercost attribute)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.agent_hz"]], "agent_hz (stable_gym.envs.robotics.quadxtrackingcost attribute)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.agent_hz"]], "agent_hz (stable_gym.envs.robotics.quadxwaypointscost attribute)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.agent_hz"]], "base_velocity (stable_gym.envs.robotics.minitaurbulletcost property)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.base_velocity"]], "compute_target_deltas() (stable_gym.envs.robotics.quadxwaypointscost method)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.compute_target_deltas"]], "cost() (stable_gym.envs.robotics.fetchreachcost method)": [[33, "stable_gym.envs.robotics.FetchReachCost.cost"]], "cost() (stable_gym.envs.robotics.minitaurbulletcost method)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.cost"]], "cost() (stable_gym.envs.robotics.quadxhovercost method)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.cost"]], "cost() (stable_gym.envs.robotics.quadxtrackingcost method)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.cost"]], "cost() (stable_gym.envs.robotics.quadxwaypointscost method)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.cost"]], "dt (stable_gym.envs.robotics.fetchreachcost attribute)": [[33, "stable_gym.envs.robotics.FetchReachCost.dt"]], "dt (stable_gym.envs.robotics.minitaurbulletcost property)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.dt"]], "dt (stable_gym.envs.robotics.quadxhovercost property)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.dt"]], "dt (stable_gym.envs.robotics.quadxtrackingcost property)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.dt"]], "dt (stable_gym.envs.robotics.quadxwaypointscost property)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.dt"]], "immediate_waypoint_target (stable_gym.envs.robotics.quadxwaypointscost property)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.immediate_waypoint_target"]], "initial_physics_time (stable_gym.envs.robotics.quadxhovercost attribute)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.initial_physics_time"]], "initial_physics_time (stable_gym.envs.robotics.quadxtrackingcost attribute)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.initial_physics_time"]], "initial_physics_time (stable_gym.envs.robotics.quadxwaypointscost attribute)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.initial_physics_time"]], "is_fallen() (stable_gym.envs.robotics.minitaurbulletcost method)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.is_fallen"]], "metadata (stable_gym.envs.robotics.minitaurbulletcost attribute)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.metadata"]], "physics_time (stable_gym.envs.robotics.fetchreachcost property)": [[33, "stable_gym.envs.robotics.FetchReachCost.physics_time"]], "physics_time (stable_gym.envs.robotics.minitaurbulletcost property)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.physics_time"]], "physics_time (stable_gym.envs.robotics.quadxhovercost property)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.physics_time"]], "physics_time (stable_gym.envs.robotics.quadxtrackingcost property)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.physics_time"]], "physics_time (stable_gym.envs.robotics.quadxwaypointscost property)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.physics_time"]], "reference() (stable_gym.envs.robotics.quadxtrackingcost method)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.reference"]], "reference_forward_velocity (stable_gym.envs.robotics.minitaurbulletcost attribute)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.reference_forward_velocity"]], "reset() (stable_gym.envs.robotics.fetchreachcost method)": [[33, "stable_gym.envs.robotics.FetchReachCost.reset"]], "reset() (stable_gym.envs.robotics.minitaurbulletcost method)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.reset"]], "reset() (stable_gym.envs.robotics.quadxhovercost method)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.reset"]], "reset() (stable_gym.envs.robotics.quadxtrackingcost method)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.reset"]], "reset() (stable_gym.envs.robotics.quadxwaypointscost method)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.reset"]], "stable_gym.envs.robotics": [[33, "module-stable_gym.envs.robotics"]], "state (stable_gym.envs.robotics.fetchreachcost attribute)": [[33, "stable_gym.envs.robotics.FetchReachCost.state"]], "state (stable_gym.envs.robotics.minitaurbulletcost attribute)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.state"]], "state (stable_gym.envs.robotics.quadxhovercost attribute)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.state"]], "state (stable_gym.envs.robotics.quadxtrackingcost attribute)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.state"]], "state (stable_gym.envs.robotics.quadxwaypointscost attribute)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.state"]], "step() (stable_gym.envs.robotics.fetchreachcost method)": [[33, "stable_gym.envs.robotics.FetchReachCost.step"]], "step() (stable_gym.envs.robotics.minitaurbulletcost method)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.step"]], "step() (stable_gym.envs.robotics.quadxhovercost method)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.step"]], "step() (stable_gym.envs.robotics.quadxtrackingcost method)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.step"]], "step() (stable_gym.envs.robotics.quadxwaypointscost method)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.step"]], "t (stable_gym.envs.robotics.fetchreachcost property)": [[33, "stable_gym.envs.robotics.FetchReachCost.t"]], "t (stable_gym.envs.robotics.minitaurbulletcost attribute)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.t"]], "t (stable_gym.envs.robotics.quadxhovercost property)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.t"]], "t (stable_gym.envs.robotics.quadxtrackingcost property)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.t"]], "t (stable_gym.envs.robotics.quadxwaypointscost property)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.t"]], "tau (stable_gym.envs.robotics.fetchreachcost property)": [[33, "stable_gym.envs.robotics.FetchReachCost.tau"]], "tau (stable_gym.envs.robotics.minitaurbulletcost property)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.tau"]], "tau (stable_gym.envs.robotics.quadxhovercost property)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.tau"]], "tau (stable_gym.envs.robotics.quadxtrackingcost property)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.tau"]], "tau (stable_gym.envs.robotics.quadxwaypointscost property)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.tau"]], "time_limit (stable_gym.envs.robotics.quadxhovercost property)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.time_limit"]], "time_limit (stable_gym.envs.robotics.quadxtrackingcost property)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.time_limit"]], "time_limit (stable_gym.envs.robotics.quadxwaypointscost property)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.minitaurbulletcost property)": [[33, "stable_gym.envs.robotics.MinitaurBulletCost.time_limit_max_episode_steps"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadxhovercost property)": [[33, "stable_gym.envs.robotics.QuadXHoverCost.time_limit_max_episode_steps"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadxtrackingcost property)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.time_limit_max_episode_steps"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadxwaypointscost property)": [[33, "stable_gym.envs.robotics.QuadXWaypointsCost.time_limit_max_episode_steps"]], "visualize_reference() (stable_gym.envs.robotics.quadxtrackingcost method)": [[33, "stable_gym.envs.robotics.QuadXTrackingCost.visualize_reference"]], "minitaurbulletcost (class in stable_gym.envs.robotics.minitaur)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost"]], "_termination() (stable_gym.envs.robotics.minitaur.minitaurbulletcost method)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost._termination"]], "base_velocity (stable_gym.envs.robotics.minitaur.minitaurbulletcost property)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.base_velocity"]], "cost() (stable_gym.envs.robotics.minitaur.minitaurbulletcost method)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.cost"]], "dt (stable_gym.envs.robotics.minitaur.minitaurbulletcost property)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.dt"]], "is_fallen() (stable_gym.envs.robotics.minitaur.minitaurbulletcost method)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.is_fallen"]], "metadata (stable_gym.envs.robotics.minitaur.minitaurbulletcost attribute)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.metadata"]], "physics_time (stable_gym.envs.robotics.minitaur.minitaurbulletcost property)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.robotics.minitaur.minitaurbulletcost attribute)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.reference_forward_velocity"]], "reset() (stable_gym.envs.robotics.minitaur.minitaurbulletcost method)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.reset"]], "stable_gym.envs.robotics.minitaur": [[34, "module-stable_gym.envs.robotics.minitaur"]], "state (stable_gym.envs.robotics.minitaur.minitaurbulletcost attribute)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.state"]], "step() (stable_gym.envs.robotics.minitaur.minitaurbulletcost method)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.step"]], "t (stable_gym.envs.robotics.minitaur.minitaurbulletcost attribute)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.t"]], "tau (stable_gym.envs.robotics.minitaur.minitaurbulletcost property)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.tau"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.minitaur.minitaurbulletcost property)": [[34, "stable_gym.envs.robotics.minitaur.MinitaurBulletCost.time_limit_max_episode_steps"]], "minitaurbulletcost (class in stable_gym.envs.robotics.minitaur.minitaur_bullet_cost)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost"]], "_termination() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost method)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost._termination"]], "base_velocity (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost property)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.base_velocity"]], "cost() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost method)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.cost"]], "dt (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost property)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.dt"]], "is_fallen() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost method)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.is_fallen"]], "metadata (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost attribute)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.metadata"]], "physics_time (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost property)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost attribute)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.reference_forward_velocity"]], "reset() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost method)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.reset"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost": [[35, "module-stable_gym.envs.robotics.minitaur.minitaur_bullet_cost"]], "state (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost attribute)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.state"]], "step() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost method)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.step"]], "t (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost attribute)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.t"]], "tau (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost property)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.tau"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaurbulletcost property)": [[35, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.MinitaurBulletCost.time_limit_max_episode_steps"]], "episodes (in module stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.EPISODES"]], "minitaurbulletcost (class in stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost"]], "random_step (in module stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.RANDOM_STEP"]], "_termination() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost method)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost._termination"]], "base_velocity (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost property)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.base_velocity"]], "cost() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost method)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.cost"]], "dt (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost property)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.dt"]], "env (in module stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.env"]], "is_fallen() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost method)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.is_fallen"]], "metadata (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost attribute)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.metadata"]], "physics_time (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost property)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.physics_time"]], "reference_forward_velocity (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost attribute)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.reference_forward_velocity"]], "reset() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost method)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.reset"]], "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost": [[36, "module-stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost"]], "state (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost attribute)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.state"]], "step() (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost method)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.step"]], "t (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost attribute)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.t"]], "tau (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost property)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.tau"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.minitaurbulletcost property)": [[36, "stable_gym.envs.robotics.minitaur.minitaur_bullet_cost.minitaur_bullet_cost.MinitaurBulletCost.time_limit_max_episode_steps"]], "quadxhovercost (class in stable_gym.envs.robotics.quadrotor)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost"]], "quadxtrackingcost (class in stable_gym.envs.robotics.quadrotor)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost"]], "quadxwaypointscost (class in stable_gym.envs.robotics.quadrotor)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadxhovercost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.agent_hz"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadxtrackingcost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.agent_hz"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadxwaypointscost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.agent_hz"]], "compute_target_deltas() (stable_gym.envs.robotics.quadrotor.quadxwaypointscost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.compute_target_deltas"]], "cost() (stable_gym.envs.robotics.quadrotor.quadxhovercost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.cost"]], "cost() (stable_gym.envs.robotics.quadrotor.quadxtrackingcost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.cost"]], "cost() (stable_gym.envs.robotics.quadrotor.quadxwaypointscost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.cost"]], "dt (stable_gym.envs.robotics.quadrotor.quadxhovercost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.dt"]], "dt (stable_gym.envs.robotics.quadrotor.quadxtrackingcost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.dt"]], "dt (stable_gym.envs.robotics.quadrotor.quadxwaypointscost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.dt"]], "immediate_waypoint_target (stable_gym.envs.robotics.quadrotor.quadxwaypointscost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.immediate_waypoint_target"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadxhovercost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.initial_physics_time"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadxtrackingcost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.initial_physics_time"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadxwaypointscost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.initial_physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadxhovercost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadxtrackingcost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadxwaypointscost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.physics_time"]], "reference() (stable_gym.envs.robotics.quadrotor.quadxtrackingcost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.reference"]], "reset() (stable_gym.envs.robotics.quadrotor.quadxhovercost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.reset"]], "reset() (stable_gym.envs.robotics.quadrotor.quadxtrackingcost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.reset"]], "reset() (stable_gym.envs.robotics.quadrotor.quadxwaypointscost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.reset"]], "stable_gym.envs.robotics.quadrotor": [[37, "module-stable_gym.envs.robotics.quadrotor"]], "state (stable_gym.envs.robotics.quadrotor.quadxhovercost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.state"]], "state (stable_gym.envs.robotics.quadrotor.quadxtrackingcost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.state"]], "state (stable_gym.envs.robotics.quadrotor.quadxwaypointscost attribute)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.state"]], "step() (stable_gym.envs.robotics.quadrotor.quadxhovercost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.step"]], "step() (stable_gym.envs.robotics.quadrotor.quadxtrackingcost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.step"]], "step() (stable_gym.envs.robotics.quadrotor.quadxwaypointscost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.step"]], "t (stable_gym.envs.robotics.quadrotor.quadxhovercost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.t"]], "t (stable_gym.envs.robotics.quadrotor.quadxtrackingcost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.t"]], "t (stable_gym.envs.robotics.quadrotor.quadxwaypointscost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.t"]], "tau (stable_gym.envs.robotics.quadrotor.quadxhovercost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.tau"]], "tau (stable_gym.envs.robotics.quadrotor.quadxtrackingcost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.tau"]], "tau (stable_gym.envs.robotics.quadrotor.quadxwaypointscost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.tau"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadxhovercost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.time_limit"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadxtrackingcost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.time_limit"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadxwaypointscost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadxhovercost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXHoverCost.time_limit_max_episode_steps"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadxtrackingcost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.time_limit_max_episode_steps"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadxwaypointscost property)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXWaypointsCost.time_limit_max_episode_steps"]], "visualize_reference() (stable_gym.envs.robotics.quadrotor.quadxtrackingcost method)": [[37, "stable_gym.envs.robotics.quadrotor.QuadXTrackingCost.visualize_reference"]], "quadxhovercost (class in stable_gym.envs.robotics.quadrotor.quadx_hover_cost)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost attribute)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.agent_hz"]], "cost() (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost method)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.cost"]], "dt (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost property)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.dt"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost attribute)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.initial_physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost property)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.physics_time"]], "reset() (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost method)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.reset"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost": [[38, "module-stable_gym.envs.robotics.quadrotor.quadx_hover_cost"]], "state (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost attribute)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.state"]], "step() (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost method)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.step"]], "t (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost property)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.t"]], "tau (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost property)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.tau"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost property)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadxhovercost property)": [[38, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.QuadXHoverCost.time_limit_max_episode_steps"]], "episodes (in module stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.EPISODES"]], "quadxhovercost (class in stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost"]], "random_step (in module stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.RANDOM_STEP"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost attribute)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.agent_hz"]], "cost() (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost method)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.cost"]], "dt (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost property)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.dt"]], "env (in module stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.env"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost attribute)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.initial_physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost property)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.physics_time"]], "reset() (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost method)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.reset"]], "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost": [[39, "module-stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost"]], "state (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost attribute)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.state"]], "step() (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost method)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.step"]], "t (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost property)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.t"]], "tau (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost property)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.tau"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost property)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.quadxhovercost property)": [[39, "stable_gym.envs.robotics.quadrotor.quadx_hover_cost.quadx_hover_cost.QuadXHoverCost.time_limit_max_episode_steps"]], "quadxtrackingcost (class in stable_gym.envs.robotics.quadrotor.quadx_tracking_cost)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost attribute)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.agent_hz"]], "cost() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost method)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.cost"]], "dt (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost property)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.dt"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost attribute)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.initial_physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost property)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.physics_time"]], "reference() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost method)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.reference"]], "reset() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost method)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.reset"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost": [[40, "module-stable_gym.envs.robotics.quadrotor.quadx_tracking_cost"]], "state (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost attribute)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.state"]], "step() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost method)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.step"]], "t (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost property)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.t"]], "tau (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost property)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.tau"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost property)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost property)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.time_limit_max_episode_steps"]], "visualize_reference() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadxtrackingcost method)": [[40, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.QuadXTrackingCost.visualize_reference"]], "episodes (in module stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.EPISODES"]], "quadxtrackingcost (class in stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost"]], "random_step (in module stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.RANDOM_STEP"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost attribute)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.agent_hz"]], "cost() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost method)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.cost"]], "dt (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost property)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.dt"]], "env (in module stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.env"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost attribute)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.initial_physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost property)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.physics_time"]], "reference() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost method)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.reference"]], "reset() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost method)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.reset"]], "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost": [[41, "module-stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost"]], "state (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost attribute)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.state"]], "step() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost method)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.step"]], "t (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost property)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.t"]], "tau (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost property)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.tau"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost property)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost property)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.time_limit_max_episode_steps"]], "visualize_reference() (stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.quadxtrackingcost method)": [[41, "stable_gym.envs.robotics.quadrotor.quadx_tracking_cost.quadx_tracking_cost.QuadXTrackingCost.visualize_reference"]], "quadxwaypointscost (class in stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost attribute)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.agent_hz"]], "compute_target_deltas() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost method)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.compute_target_deltas"]], "cost() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost method)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.cost"]], "dt (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost property)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.dt"]], "immediate_waypoint_target (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost property)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.immediate_waypoint_target"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost attribute)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.initial_physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost property)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.physics_time"]], "reset() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost method)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.reset"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost": [[42, "module-stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost"]], "state (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost attribute)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.state"]], "step() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost method)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.step"]], "t (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost property)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.t"]], "tau (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost property)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.tau"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost property)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadxwaypointscost property)": [[42, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.QuadXWaypointsCost.time_limit_max_episode_steps"]], "episodes (in module stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.EPISODES"]], "quadxwaypointscost (class in stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost"]], "random_step (in module stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.RANDOM_STEP"]], "agent_hz (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost attribute)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.agent_hz"]], "compute_target_deltas() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost method)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.compute_target_deltas"]], "cost() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost method)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.cost"]], "dt (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost property)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.dt"]], "env (in module stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.env"]], "immediate_waypoint_target (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost property)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.immediate_waypoint_target"]], "initial_physics_time (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost attribute)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.initial_physics_time"]], "physics_time (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost property)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.physics_time"]], "reset() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost method)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.reset"]], "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost": [[43, "module-stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost"]], "state (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost attribute)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.state"]], "step() (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost method)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.step"]], "t (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost property)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.t"]], "tau (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost property)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.tau"]], "time_limit (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost property)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.time_limit"]], "time_limit_max_episode_steps (stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.quadxwaypointscost property)": [[43, "stable_gym.envs.robotics.quadrotor.quadx_waypoints_cost.quadx_waypoints_cost.QuadXWaypointsCost.time_limit_max_episode_steps"]], "envs (in module stable_gym)": [[44, "stable_gym.ENVS"]], "maxepisodestepsinjectionwrapper (class in stable_gym)": [[44, "stable_gym.MaxEpisodeStepsInjectionWrapper"]], "__version__ (in module stable_gym)": [[44, "stable_gym.__version__"]], "__version_tuple__ (in module stable_gym)": [[44, "stable_gym.__version_tuple__"]], "stable_gym": [[44, "module-stable_gym"]], "__version__ (in module stable_gym.version)": [[45, "stable_gym.version.__version__"]], "__version_tuple__ (in module stable_gym.version)": [[45, "stable_gym.version.__version_tuple__"]], "stable_gym.version": [[45, "module-stable_gym.version"]]}})